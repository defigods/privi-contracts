{
  "contractName": "BridgeManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC1155Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC20Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC721Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC1155Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC20Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC721Token",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REGISTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "name": "getErc20AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc20Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc20Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "name": "getErc721AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc721Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc721Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "getErc1155AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc1155Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllErc1155Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC1155Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC721Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC1155Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC721Token\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc1155Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc1155Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc20Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc20Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc721Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc721Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"getErc1155AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getErc20AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getErc721AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The PRIVI Blockchain team\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"registerTokenERC1155(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters\",\"params\":{\"tokenContractAddress\":\"Contract address of the ERC1155 token\",\"tokenName\":\"The name of the token to be registered (e.g.: Kitty)\",\"tokenURI\":\"The URI of the token to be registered\"}},\"registerTokenERC20(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters\",\"params\":{\"tokenContractAddress\":\"The contract address of the ERC20 Token\",\"tokenName\":\"The name of the token to be registered (e.g.: Uniswap)\",\"tokenSymbol\":\"The symbol of the token to be registered (e.g.: UNI)\"}},\"registerTokenERC721(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters\",\"params\":{\"tokenContractAddress\":\"Contract address of the ERC721 token\",\"tokenName\":\"The name of the token to be registered (e.g.: Uniswap)\",\"tokenSymbol\":\"The symbol of the token to be registered (e.g.: UNI)\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor to assign all roles to contract creator\"},\"getAllErc1155Count()\":{\"notice\":\"Get count of all registered ERC1155 tokens\"},\"getAllErc1155Registered()\":{\"notice\":\"Get an array of all registered ERC1155 tokens\"},\"getAllErc20Count()\":{\"notice\":\"Get count of all registered ERC20 tokens\"},\"getAllErc20Registered()\":{\"notice\":\"Get an array of all registered ERC20 tokens\"},\"getAllErc721Count()\":{\"notice\":\"Get count of all registered ERC721 tokens\"},\"getAllErc721Registered()\":{\"notice\":\"Get an array of all registered ERC721 tokens\"},\"getErc1155AddressRegistered(string)\":{\"notice\":\"Get the address of a registered ERC1155 token\"},\"getErc20AddressRegistered(string)\":{\"notice\":\"Get the contract address of a registered ERC20 token\"},\"getErc721AddressRegistered(string)\":{\"notice\":\"Get the contract address of a registered ERC721 token\"},\"registerTokenERC1155(string,string,address)\":{\"notice\":\"Register the contract address of an ERC1155 Token\"},\"registerTokenERC20(string,string,address)\":{\"notice\":\"Register the contract address of an ERC20 token\"},\"registerTokenERC721(string,string,address)\":{\"notice\":\"Register the contract address of an ERC721 Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sergijuanati/Dropbox/Docs/2. Work/16. Privi/3. Code/getcache_ethereum/contracts/BridgeManager.sol\":\"BridgeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/sergijuanati/Dropbox/Docs/2. Work/16. Privi/3. Code/getcache_ethereum/contracts/BridgeManager.sol\":{\"keccak256\":\"0x49fd23ba8e1d9787711da034051428741e1381d80900ee2f603880049e8416ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54f0ac5295d805d3e48f5cc5ff392f84515ba9d6ab8add03c28fa3636e534285\",\"dweb:/ipfs/QmaH8hyhA3S31mxh6UmW36yDBG9gT87MkmuzqcpLfdW53B\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000286000620000226200005d565b62000061565b620000577fd1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe620000226200005d565b62000124565b3390565b6200006d828262000071565b5050565b6200007d8282620000fb565b6200006d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000b76200005d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61180d80620001346000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806374f53317116100ad578063a217fddf11610071578063a217fddf1461024b578063c082713b14610253578063c7092a8214610266578063d547741f1461026e578063dd2c859c146102815761012c565b806374f533171461020d57806390344f621461021557806391567da81461021d57806391d14854146102305780639f45c1d3146102435761012c565b806336568abe116100f457806336568abe146101b7578063455686c3146101ca5780634d4825a0146101d25780634dd1b5f8146101e557806353206452146101f85761012c565b806301ab669c1461013157806301ffc9a71461014f57806310a43eba1461016f578063248a9ca31461018f5780632f2ff15d146101a2575b600080fd5b610139610294565b604051610146919061157e565b60405180910390f35b61016261015d366004611380565b61029a565b6040516101469190611573565b61018261017d3660046113af565b6102c7565b60405161014691906114c8565b61013961019d36600461133d565b6102fb565b6101b56101b0366004611355565b610310565b005b6101b56101c5366004611355565b610357565b610139610399565b6101b56101e03660046113ef565b61039f565b6101826101f33660046113af565b6105fb565b61020061060f565b60405161014691906114dc565b6101396107a8565b6101396107cc565b61018261022b3660046113af565b6107d2565b61016261023e366004611355565b6107e6565b61020061080f565b61013961099f565b6101b56102613660046113ef565b6109a4565b610200610c7d565b6101b561027c366004611355565b610e0d565b6101b561028f3660046113ef565b610e35565b60035490565b60006001600160e01b03198216637965db0b60e01b14806102bf57506102bf826110f7565b90505b919050565b6000600283836040516102db9291906114b8565b908152604051908190036020019020546001600160a01b03169392505050565b60009081526020819052604090206001015490565b61032461031c836102fb565b61023e611110565b6103495760405162461bcd60e51b815260040161034090611587565b60405180910390fd5b6103538282611114565b5050565b61035f611110565b6001600160a01b0316816001600160a01b03161461038f5760405162461bcd60e51b81526004016103409061173f565b6103538282611199565b60015490565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508251839250151590506103f85760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b0316600686866040516104159291906114b8565b908152604051908190036020019020546001600160a01b03161461044b5760405162461bcd60e51b8152600401610340906115e4565b826006868660405161045e9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905561049561121c565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815290879087908190840183828082843760009201829052506020808701959095526001600160a01b038916604087015260058054600181018255915285518051879660039093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00195506105619450859350910190611246565b50602082810151805161057a9260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516105b290879087906114b8565b60405180910390207f823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c856040516105e991906114c8565b60405180910390a25050505050505050565b6000600683836040516102db9291906114b8565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561079f57838290600052602060002090600302016040518060600160405290816000820180546106669061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546106929061179c565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081526020016001820180546106f89061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546107249061179c565b80156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610633565b50505050905090565b7fd1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe81565b60055490565b6000600483836040516102db9291906114b8565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561079f57838290600052602060002090600302016040518060600160405290816000820180546108669061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546108929061179c565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505081526020016001820180546108f89061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546109249061179c565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610833565b600081565b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508251839250151590506109fd5760405162461bcd60e51b81526004016103409061169e565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610a565760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b031660048888604051610a739291906114b8565b908152604051908190036020019020546001600160a01b031614610aa95760405162461bcd60e51b8152600401610340906115e4565b60198610610ac95760405162461bcd60e51b8152600401610340906116fb565b8460048888604051610adc9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610b1361121c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b1660408701526003805460018101825591819052865180518897939092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019550610be1945085935090910190611246565b506020828101518051610bfa9260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b0390921691909117905551610c3290899089906114b8565b60405180910390207f8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b9587604051610c6991906114c8565b60405180910390a250505050505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561079f5783829060005260206000209060030201604051806060016040529081600082018054610cd49061179c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d009061179c565b8015610d4d5780601f10610d2257610100808354040283529160200191610d4d565b820191906000526020600020905b815481529060010190602001808311610d3057829003601f168201915b50505050508152602001600182018054610d669061179c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d929061179c565b8015610ddf5780601f10610db457610100808354040283529160200191610ddf565b820191906000526020600020905b815481529060010190602001808311610dc257829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610ca1565b610e1961031c836102fb565b61038f5760405162461bcd60e51b815260040161034090611641565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610e8e5760405162461bcd60e51b81526004016103409061169e565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610ee75760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b031660028888604051610f049291906114b8565b908152604051908190036020019020546001600160a01b031614610f3a5760405162461bcd60e51b8152600401610340906115e4565b60198610610f5a5760405162461bcd60e51b8152600401610340906116fb565b8460028888604051610f6d9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610fa461121c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b166040870152600180548082018255915285518051879660039093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601955061106f9450859350910190611246565b5060208281015180516110889260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516110c090899089906114b8565b60405180910390207f8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c87604051610c6991906114c8565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b61111e82826107e6565b610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611155611110565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111a382826107e6565b15610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556111d8611110565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6040518060600160405280606081526020016060815260200160006001600160a01b031681525090565b8280546112529061179c565b90600052602060002090601f01602090048101928261127457600085556112ba565b82601f1061128d57805160ff19168380011785556112ba565b828001600101855582156112ba579182015b828111156112ba57825182559160200191906001019061129f565b506112c69291506112ca565b5090565b5b808211156112c657600081556001016112cb565b80356001600160a01b03811681146102c257600080fd5b60008083601f840112611307578182fd5b50813567ffffffffffffffff81111561131e578182fd5b60208301915083602082850101111561133657600080fd5b9250929050565b60006020828403121561134e578081fd5b5035919050565b60008060408385031215611367578081fd5b82359150611377602084016112df565b90509250929050565b600060208284031215611391578081fd5b81356001600160e01b0319811681146113a8578182fd5b9392505050565b600080602083850312156113c1578182fd5b823567ffffffffffffffff8111156113d7578283fd5b6113e3858286016112f6565b90969095509350505050565b600080600080600060608688031215611406578081fd5b853567ffffffffffffffff8082111561141d578283fd5b61142989838a016112f6565b90975095506020880135915080821115611441578283fd5b5061144e888289016112f6565b90945092506114619050604087016112df565b90509295509295909350565b60008151808452815b8181101561149257602081850181015186830182015201611476565b818111156114a35782602083870101525b50601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561156557603f198984030185528151606081518186526115268287018261146d565b915050888201518582038a87015261153e828261146d565b928901516001600160a01b0316958901959095525094870194925090860190600101611500565b509098975050505050505050565b901515815260200190565b90815260200190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f206772616e740000000000000000000000000000000000606082015260800190565b60208082526032908201527f4272696467654d616e616765723a20746f6b656e20616464726573732069732060408201527f616c726561647920726567697374657265640000000000000000000000000000606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000606082015260800190565b60208082526033908201527f4272696467654d616e616765723a20746f6b656e206e616d6520616e6420737960408201527f6d626f6c2063616e277420626520656d70747900000000000000000000000000606082015260800190565b60208082526024908201527f4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206040820152636c6f6e6760e01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b6002810460018216806117b057607f821691505b602082108114156117d157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cf97a927f820762fe5c930052b00bf2f389ebf43c01a4e4310f7f7a7f108829764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806374f53317116100ad578063a217fddf11610071578063a217fddf1461024b578063c082713b14610253578063c7092a8214610266578063d547741f1461026e578063dd2c859c146102815761012c565b806374f533171461020d57806390344f621461021557806391567da81461021d57806391d14854146102305780639f45c1d3146102435761012c565b806336568abe116100f457806336568abe146101b7578063455686c3146101ca5780634d4825a0146101d25780634dd1b5f8146101e557806353206452146101f85761012c565b806301ab669c1461013157806301ffc9a71461014f57806310a43eba1461016f578063248a9ca31461018f5780632f2ff15d146101a2575b600080fd5b610139610294565b604051610146919061157e565b60405180910390f35b61016261015d366004611380565b61029a565b6040516101469190611573565b61018261017d3660046113af565b6102c7565b60405161014691906114c8565b61013961019d36600461133d565b6102fb565b6101b56101b0366004611355565b610310565b005b6101b56101c5366004611355565b610357565b610139610399565b6101b56101e03660046113ef565b61039f565b6101826101f33660046113af565b6105fb565b61020061060f565b60405161014691906114dc565b6101396107a8565b6101396107cc565b61018261022b3660046113af565b6107d2565b61016261023e366004611355565b6107e6565b61020061080f565b61013961099f565b6101b56102613660046113ef565b6109a4565b610200610c7d565b6101b561027c366004611355565b610e0d565b6101b561028f3660046113ef565b610e35565b60035490565b60006001600160e01b03198216637965db0b60e01b14806102bf57506102bf826110f7565b90505b919050565b6000600283836040516102db9291906114b8565b908152604051908190036020019020546001600160a01b03169392505050565b60009081526020819052604090206001015490565b61032461031c836102fb565b61023e611110565b6103495760405162461bcd60e51b815260040161034090611587565b60405180910390fd5b6103538282611114565b5050565b61035f611110565b6001600160a01b0316816001600160a01b03161461038f5760405162461bcd60e51b81526004016103409061173f565b6103538282611199565b60015490565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508251839250151590506103f85760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b0316600686866040516104159291906114b8565b908152604051908190036020019020546001600160a01b03161461044b5760405162461bcd60e51b8152600401610340906115e4565b826006868660405161045e9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905561049561121c565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815290879087908190840183828082843760009201829052506020808701959095526001600160a01b038916604087015260058054600181018255915285518051879660039093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00195506105619450859350910190611246565b50602082810151805161057a9260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516105b290879087906114b8565b60405180910390207f823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c856040516105e991906114c8565b60405180910390a25050505050505050565b6000600683836040516102db9291906114b8565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561079f57838290600052602060002090600302016040518060600160405290816000820180546106669061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546106929061179c565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081526020016001820180546106f89061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546107249061179c565b80156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610633565b50505050905090565b7fd1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe81565b60055490565b6000600483836040516102db9291906114b8565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561079f57838290600052602060002090600302016040518060600160405290816000820180546108669061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546108929061179c565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505081526020016001820180546108f89061179c565b80601f01602080910402602001604051908101604052809291908181526020018280546109249061179c565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610833565b600081565b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508251839250151590506109fd5760405162461bcd60e51b81526004016103409061169e565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610a565760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b031660048888604051610a739291906114b8565b908152604051908190036020019020546001600160a01b031614610aa95760405162461bcd60e51b8152600401610340906115e4565b60198610610ac95760405162461bcd60e51b8152600401610340906116fb565b8460048888604051610adc9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610b1361121c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b1660408701526003805460018101825591819052865180518897939092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019550610be1945085935090910190611246565b506020828101518051610bfa9260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b0390921691909117905551610c3290899089906114b8565b60405180910390207f8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b9587604051610c6991906114c8565b60405180910390a250505050505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561079f5783829060005260206000209060030201604051806060016040529081600082018054610cd49061179c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d009061179c565b8015610d4d5780601f10610d2257610100808354040283529160200191610d4d565b820191906000526020600020905b815481529060010190602001808311610d3057829003601f168201915b50505050508152602001600182018054610d669061179c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d929061179c565b8015610ddf5780601f10610db457610100808354040283529160200191610ddf565b820191906000526020600020905b815481529060010190602001808311610dc257829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610ca1565b610e1961031c836102fb565b61038f5760405162461bcd60e51b815260040161034090611641565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610e8e5760405162461bcd60e51b81526004016103409061169e565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610ee75760405162461bcd60e51b81526004016103409061169e565b60006001600160a01b031660028888604051610f049291906114b8565b908152604051908190036020019020546001600160a01b031614610f3a5760405162461bcd60e51b8152600401610340906115e4565b60198610610f5a5760405162461bcd60e51b8152600401610340906116fb565b8460028888604051610f6d9291906114b8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610fa461121c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b166040870152600180548082018255915285518051879660039093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601955061106f9450859350910190611246565b5060208281015180516110889260018501920190611246565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516110c090899089906114b8565b60405180910390207f8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c87604051610c6991906114c8565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b61111e82826107e6565b610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611155611110565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111a382826107e6565b15610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556111d8611110565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6040518060600160405280606081526020016060815260200160006001600160a01b031681525090565b8280546112529061179c565b90600052602060002090601f01602090048101928261127457600085556112ba565b82601f1061128d57805160ff19168380011785556112ba565b828001600101855582156112ba579182015b828111156112ba57825182559160200191906001019061129f565b506112c69291506112ca565b5090565b5b808211156112c657600081556001016112cb565b80356001600160a01b03811681146102c257600080fd5b60008083601f840112611307578182fd5b50813567ffffffffffffffff81111561131e578182fd5b60208301915083602082850101111561133657600080fd5b9250929050565b60006020828403121561134e578081fd5b5035919050565b60008060408385031215611367578081fd5b82359150611377602084016112df565b90509250929050565b600060208284031215611391578081fd5b81356001600160e01b0319811681146113a8578182fd5b9392505050565b600080602083850312156113c1578182fd5b823567ffffffffffffffff8111156113d7578283fd5b6113e3858286016112f6565b90969095509350505050565b600080600080600060608688031215611406578081fd5b853567ffffffffffffffff8082111561141d578283fd5b61142989838a016112f6565b90975095506020880135915080821115611441578283fd5b5061144e888289016112f6565b90945092506114619050604087016112df565b90509295509295909350565b60008151808452815b8181101561149257602081850181015186830182015201611476565b818111156114a35782602083870101525b50601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561156557603f198984030185528151606081518186526115268287018261146d565b915050888201518582038a87015261153e828261146d565b928901516001600160a01b0316958901959095525094870194925090860190600101611500565b509098975050505050505050565b901515815260200190565b90815260200190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f206772616e740000000000000000000000000000000000606082015260800190565b60208082526032908201527f4272696467654d616e616765723a20746f6b656e20616464726573732069732060408201527f616c726561647920726567697374657265640000000000000000000000000000606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000606082015260800190565b60208082526033908201527f4272696467654d616e616765723a20746f6b656e206e616d6520616e6420737960408201527f6d626f6c2063616e277420626520656d70747900000000000000000000000000606082015260800190565b60208082526024908201527f4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206040820152636c6f6e6760e01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b6002810460018216806117b057607f821691505b602082108114156117d157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cf97a927f820762fe5c930052b00bf2f389ebf43c01a4e4310f7f7a7f108829764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8415:61",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:61",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:61"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:61"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:61",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:61",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:61"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:61"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:61",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:61"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:61"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:61"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:61"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:61",
                "type": ""
              }
            ],
            "src": "14:198:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:303:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "341:30:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "350:8:61"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "360:8:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "343:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "343:26:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "343:26:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "320:6:61"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "328:4:61",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "316:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "316:17:61"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "335:3:61"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "312:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "312:27:61"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "305:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:35:61"
                  },
                  "nodeType": "YulIf",
                  "src": "302:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "380:30:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "403:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "390:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:20:61"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "380:6:61"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:30:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "462:8:61"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "472:8:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "455:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:26:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "455:26:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "425:6:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:18:61",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "422:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "422:30:61"
                  },
                  "nodeType": "YulIf",
                  "src": "419:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "492:29:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "508:6:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:4:61",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "504:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "504:17:61"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "492:8:61"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "573:16:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "582:1:61",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "585:1:61",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "575:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "575:12:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "575:12:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "544:6:61"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "552:6:61"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "540:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "540:19:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "561:4:61",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "536:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:30:61"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "568:3:61"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "533:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:39:61"
                  },
                  "nodeType": "YulIf",
                  "src": "530:2:61"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "255:6:61",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "263:3:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "271:8:61",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "281:6:61",
                "type": ""
              }
            ],
            "src": "217:378:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:120:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "716:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "725:6:61"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "733:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "718:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "718:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "691:7:61"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "700:9:61"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "687:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "687:23:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "683:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:32:61"
                  },
                  "nodeType": "YulIf",
                  "src": "680:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "751:33:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "774:9:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "761:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "761:23:61"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "636:9:61",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "647:7:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "659:6:61",
                "type": ""
              }
            ],
            "src": "600:190:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "882:179:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "928:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "937:6:61"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "945:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "930:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "930:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "930:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "903:7:61"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "912:9:61"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "899:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "899:23:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:2:61",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "895:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:32:61"
                  },
                  "nodeType": "YulIf",
                  "src": "892:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "963:33:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "986:9:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "973:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:23:61"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "963:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1005:50:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1040:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1051:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:18:61"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1015:20:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:40:61"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1005:6:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "840:9:61",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "851:7:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "863:6:61",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "871:6:61",
                "type": ""
              }
            ],
            "src": "795:266:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1135:237:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1181:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1190:6:61"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1198:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1183:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1183:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1183:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1156:7:61"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:61"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:23:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1177:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:32:61"
                  },
                  "nodeType": "YulIf",
                  "src": "1145:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1216:36:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1242:9:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1229:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:23:61"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1220:5:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1316:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1325:6:61"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1333:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1318:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1318:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1318:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1274:5:61"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1285:5:61"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1296:3:61",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1301:10:61",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1292:3:61"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1292:20:61"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1281:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:32:61"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1271:2:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:43:61"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:51:61"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1351:15:61",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1361:5:61"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1101:9:61",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1112:7:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1124:6:61",
                "type": ""
              }
            ],
            "src": "1066:306:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1467:343:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1513:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1522:6:61"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1515:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1515:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1515:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1488:7:61"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1497:9:61"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:23:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1480:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:32:61"
                  },
                  "nodeType": "YulIf",
                  "src": "1477:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1548:37:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1575:9:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1562:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:23:61"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1552:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1628:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1637:6:61"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1645:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1630:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1630:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1630:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1600:6:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:18:61",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1597:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:30:61"
                  },
                  "nodeType": "YulIf",
                  "src": "1594:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1663:87:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:61"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:22:61"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1742:7:61"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1689:28:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:61:61"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "1667:8:61",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1677:8:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1759:18:61",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "1769:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1759:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1786:18:61",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1796:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1786:6:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1425:9:61",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1436:7:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1448:6:61",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1456:6:61",
                "type": ""
              }
            ],
            "src": "1377:433:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1959:687:61",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2005:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2014:6:61"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2022:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2007:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2007:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2007:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1980:7:61"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1989:9:61"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1976:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1976:23:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2001:2:61",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1972:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:32:61"
                  },
                  "nodeType": "YulIf",
                  "src": "1969:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2040:37:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2067:9:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2054:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2054:23:61"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2044:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2086:28:61",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2096:18:61",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2090:2:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2150:6:61"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2158:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2143:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2129:6:61"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2137:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2126:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:14:61"
                  },
                  "nodeType": "YulIf",
                  "src": "2123:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2176:87:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2235:9:61"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2246:6:61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2231:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:22:61"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2255:7:61"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2202:28:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:61:61"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "2180:8:61",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2190:8:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2272:18:61",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "2282:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2272:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2299:18:61",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2309:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2299:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2326:48:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2359:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2370:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2355:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:18:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2342:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:32:61"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2330:8:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2403:26:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2412:6:61"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2420:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2405:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2405:22:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2405:22:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2389:8:61"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2399:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2386:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:16:61"
                  },
                  "nodeType": "YulIf",
                  "src": "2383:2:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2438:89:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2497:9:61"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2508:8:61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2493:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2493:24:61"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2519:7:61"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2464:28:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:63:61"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2442:8:61",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "2452:8:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:18:61",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2546:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2563:18:61",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2573:8:61"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2563:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2590:50:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2636:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2621:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2621:18:61"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2600:20:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:40:61"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2590:6:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1893:9:61",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1904:7:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1916:6:61",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1924:6:61",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1932:6:61",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1940:6:61",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1948:6:61",
                "type": ""
              }
            ],
            "src": "1815:831:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2703:426:61",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2713:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2733:5:61"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2727:5:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2727:12:61"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2717:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2755:3:61"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2760:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2748:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:19:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:19:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2776:12:61",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2785:3:61"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2780:1:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2849:110:61",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2863:14:61",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2873:4:61",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2867:2:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2905:3:61"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2910:1:61"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2901:3:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2901:11:61"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2914:2:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2897:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2897:20:61"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2933:5:61"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2940:1:61"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2929:3:61"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2929:13:61"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2944:2:61"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2925:3:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2925:22:61"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2919:5:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2919:29:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2890:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2890:59:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2890:59:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2808:1:61"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2811:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2805:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:13:61"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2819:21:61",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2821:17:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2830:1:61"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2833:4:61",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2826:3:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2826:12:61"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2821:1:61"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2801:3:61",
                    "statements": []
                  },
                  "src": "2797:162:61"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2993:64:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:3:61"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3027:6:61"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3018:3:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3018:16:61"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3036:4:61",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3014:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3014:27:61"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3043:3:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3007:40:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3007:40:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2974:1:61"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2977:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2971:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:13:61"
                  },
                  "nodeType": "YulIf",
                  "src": "2968:2:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3066:57:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3081:3:61"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3094:6:61"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3102:2:61",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3090:3:61"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3090:15:61"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3111:2:61",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3107:3:61"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3107:7:61"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3086:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3086:29:61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3077:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:39:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3118:4:61",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3073:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:50:61"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3066:3:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2680:5:61",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2687:3:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2695:3:61",
                "type": ""
              }
            ],
            "src": "2651:478:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:126:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3306:3:61"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3311:6:61"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3319:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3293:12:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3293:33:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3293:33:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3335:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:61"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3354:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3345:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:16:61"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3339:2:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3377:2:61"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3381:3:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3370:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:15:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3370:15:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3394:9:61",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "3401:2:61"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3394:3:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3251:3:61",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3256:6:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3264:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3275:3:61",
                "type": ""
              }
            ],
            "src": "3134:275:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3515:125:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3525:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3537:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3548:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3533:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3533:18:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3525:4:61"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3567:9:61"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3582:6:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:42:61",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3578:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3578:55:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:74:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:74:61"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3484:9:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3495:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3506:4:61",
                "type": ""
              }
            ],
            "src": "3414:226:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3858:1121:61",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3868:12:61",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3878:2:61",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3872:2:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3889:32:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3907:9:61"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3918:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3903:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3903:18:61"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3893:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3937:9:61"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3948:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3930:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3930:21:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3960:17:61",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3971:6:61"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3964:3:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3986:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4006:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4000:5:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4000:13:61"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3990:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4029:6:61"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4037:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4022:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:22:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:22:61"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4053:12:61",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4063:2:61",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4057:2:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4074:25:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4085:9:61"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4096:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4081:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4081:18:61"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4074:3:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4108:54:61",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4130:9:61"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4145:6:61"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4153:2:61"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "4141:3:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4141:15:61"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4126:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4126:31:61"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4159:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4122:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4122:40:61"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "4112:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4171:29:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4189:6:61"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4197:2:61"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4185:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4185:15:61"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4175:6:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4209:13:61",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4218:4:61"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4213:1:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4280:670:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4301:3:61"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4314:6:61"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4322:9:61"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4310:3:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4310:22:61"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4338:2:61",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4334:3:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4334:7:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4306:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4306:36:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4294:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4294:49:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4294:49:61"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4356:23:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4372:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4366:5:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4366:13:61"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "4360:2:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4392:14:61",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4402:4:61",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "4396:2:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4419:29:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "4445:2:61"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4439:5:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4439:9:61"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "4423:12:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "4468:6:61"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "4476:2:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4461:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4461:18:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4461:18:61"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4492:64:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4526:12:61"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4544:6:61"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4552:2:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4540:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4540:15:61"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string",
                            "nodeType": "YulIdentifier",
                            "src": "4506:19:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4506:50:61"
                        },
                        "variables": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulTypedName",
                            "src": "4496:6:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4569:40:61",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4601:2:61"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4605:2:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4597:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4597:11:61"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4591:5:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4591:18:61"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulTypedName",
                            "src": "4573:14:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:6:61"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4641:2:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4629:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4629:15:61"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4650:6:61"
                                },
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4658:6:61"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4646:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4646:19:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4622:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4622:44:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4622:44:61"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4679:57:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0_1",
                              "nodeType": "YulIdentifier",
                              "src": "4713:14:61"
                            },
                            {
                              "name": "tail_3",
                              "nodeType": "YulIdentifier",
                              "src": "4729:6:61"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string",
                            "nodeType": "YulIdentifier",
                            "src": "4693:19:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4693:43:61"
                        },
                        "variables": [
                          {
                            "name": "tail_4",
                            "nodeType": "YulTypedName",
                            "src": "4683:6:61",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4760:6:61"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4768:2:61"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4756:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4756:15:61"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "4787:2:61"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "4791:2:61"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4783:3:61"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4783:11:61"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4777:5:61"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4777:18:61"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4797:42:61",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4773:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4773:67:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4749:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4749:92:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4749:92:61"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4854:16:61",
                        "value": {
                          "name": "tail_4",
                          "nodeType": "YulIdentifier",
                          "src": "4864:6:61"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "4854:6:61"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4883:25:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4897:6:61"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4905:2:61"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4893:3:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4893:15:61"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4883:6:61"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4921:19:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4932:3:61"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4937:2:61"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4928:3:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4928:12:61"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4921:3:61"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4242:1:61"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4245:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4239:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:13:61"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4253:18:61",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4255:14:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4264:1:61"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4267:1:61",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4260:3:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4260:9:61"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4255:1:61"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4235:3:61",
                    "statements": []
                  },
                  "src": "4231:719:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4959:14:61",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "4967:6:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4959:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3827:9:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3838:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3849:4:61",
                "type": ""
              }
            ],
            "src": "3645:1334:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5079:92:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5089:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5101:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5112:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5097:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5097:18:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5089:4:61"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5131:9:61"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5156:6:61"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5149:6:61"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5149:14:61"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5142:6:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:22:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5124:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5124:41:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5124:41:61"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5048:9:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5059:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5070:4:61",
                "type": ""
              }
            ],
            "src": "4984:187:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5277:76:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5287:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5299:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5295:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:18:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5287:4:61"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5329:9:61"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5340:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5322:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5322:25:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5322:25:61"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5246:9:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5257:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5268:4:61",
                "type": ""
              }
            ],
            "src": "5176:177:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5532:237:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5549:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5560:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5542:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5542:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5542:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5583:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5594:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5579:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5579:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5599:2:61",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5572:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5572:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5572:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5622:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5633:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5618:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5618:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5638:34:61",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5611:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5611:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5611:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5693:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5704:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5689:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5689:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5709:17:61",
                        "type": "",
                        "value": " admin to grant"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5682:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:45:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5682:45:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5736:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5748:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5759:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5744:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5736:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5509:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5523:4:61",
                "type": ""
              }
            ],
            "src": "5358:411:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5948:240:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5965:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5976:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5958:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5958:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5958:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5999:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6010:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5995:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5995:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6015:2:61",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6038:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6049:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6054:34:61",
                        "type": "",
                        "value": "BridgeManager: token address is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6027:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6109:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6120:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6105:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6105:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6125:20:61",
                        "type": "",
                        "value": "already registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6098:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6098:48:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6098:48:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6155:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6167:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6178:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6163:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6155:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5925:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5939:4:61",
                "type": ""
              }
            ],
            "src": "5774:414:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6367:238:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6384:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6377:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6377:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6418:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6429:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6414:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6414:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6434:2:61",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6407:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6407:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6407:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6457:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6468:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6453:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6453:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6473:34:61",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6446:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6446:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6446:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6528:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6539:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6524:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6544:18:61",
                        "type": "",
                        "value": " admin to revoke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6517:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6517:46:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6517:46:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6572:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6584:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6595:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6580:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6580:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6572:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6344:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6358:4:61",
                "type": ""
              }
            ],
            "src": "6193:412:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6784:241:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6801:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6812:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6794:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6794:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6794:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6835:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6846:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6831:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6831:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6851:2:61",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6824:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6824:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6824:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6874:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6885:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6870:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6870:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6890:34:61",
                        "type": "",
                        "value": "BridgeManager: token name and sy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6863:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6863:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6863:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6945:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6956:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6941:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6941:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6961:21:61",
                        "type": "",
                        "value": "mbol can't be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6934:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6934:49:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6934:49:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6992:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7004:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7015:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7000:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7000:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6992:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6761:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6775:4:61",
                "type": ""
              }
            ],
            "src": "6610:415:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7204:226:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7221:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7232:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7214:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7214:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7255:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7266:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7251:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7251:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7271:2:61",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7244:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7244:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7244:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7294:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7305:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7290:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7290:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7310:34:61",
                        "type": "",
                        "value": "BridgeManager: token Symbol too "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7283:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7283:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7283:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7365:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7376:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7361:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7361:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7381:6:61",
                        "type": "",
                        "value": "long"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:34:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:34:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7397:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7409:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7420:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7405:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7405:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7397:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7181:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7195:4:61",
                "type": ""
              }
            ],
            "src": "7030:400:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7609:237:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7626:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7637:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7619:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7619:21:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7619:21:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7660:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7671:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7656:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7656:18:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7676:2:61",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7649:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7649:30:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7649:30:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7699:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7710:2:61",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7695:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7695:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7715:34:61",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7688:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7688:62:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7688:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7770:9:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7781:2:61",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7766:3:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7766:18:61"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7786:17:61",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7759:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:45:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7759:45:61"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7813:27:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7825:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7836:3:61",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7821:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7821:19:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7813:4:61"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7586:9:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7600:4:61",
                "type": ""
              }
            ],
            "src": "7435:411:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7952:76:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7962:26:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7974:9:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7985:2:61",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7970:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7970:18:61"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7962:4:61"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8004:9:61"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8015:6:61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7997:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:25:61"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7997:25:61"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7921:9:61",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7932:6:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7943:4:61",
                "type": ""
              }
            ],
            "src": "7851:177:61"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8088:325:61",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8098:22:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8112:4:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8118:1:61",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8108:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8108:12:61"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8098:6:61"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8129:38:61",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8159:4:61"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8165:1:61",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8155:3:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:12:61"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8133:18:61",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8206:31:61",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8208:27:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8222:6:61"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8230:4:61",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8218:3:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8218:17:61"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8208:6:61"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8186:18:61"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8179:6:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8179:26:61"
                  },
                  "nodeType": "YulIf",
                  "src": "8176:2:61"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8296:111:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8317:1:61",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8324:3:61",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8329:10:61",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8320:3:61"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8320:20:61"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8310:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8310:31:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8310:31:61"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8361:1:61",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8364:4:61",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8354:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8354:15:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8354:15:61"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8389:1:61",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8392:4:61",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8382:6:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8382:15:61"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8382:15:61"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8252:18:61"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8275:6:61"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8283:2:61",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8272:2:61"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8272:14:61"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8249:2:61"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8249:38:61"
                  },
                  "nodeType": "YulIf",
                  "src": "8246:2:61"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8068:4:61",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8077:6:61",
                "type": ""
              }
            ],
            "src": "8033:380:61"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_t_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_t_address(add(headStart, 64))\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, end)\n        end := _1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, mul(length, _1)), _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            let memberValue0 := mload(_3)\n            mstore(tail_2, _4)\n            let tail_3 := abi_encode_t_string(memberValue0, add(tail_2, _4))\n            let memberValue0_1 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), sub(tail_3, tail_2))\n            let tail_4 := abi_encode_t_string(memberValue0_1, tail_3)\n            mstore(add(tail_2, _2), and(mload(add(_3, _2)), 0xffffffffffffffffffffffffffffffffffffffff))\n            tail_2 := tail_4\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to grant\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"BridgeManager: token address is \")\n        mstore(add(headStart, 96), \"already registered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to revoke\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"BridgeManager: token name and sy\")\n        mstore(add(headStart, 96), \"mbol can't be empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BridgeManager: token Symbol too \")\n        mstore(add(headStart, 96), \"long\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 61,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "539:7393:0:-:0;;;2202:114;;;;;;;;;-1:-1:-1;2222:44:0;2408:4:37;2253:12:0;:10;:12::i;:::-;2222:10;:44::i;:::-;2272:39;623:26;2298:12;:10;:12::i;2272:39::-;539:7393;;586:96:55;665:10;586:96;:::o;6519:110:37:-;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:37;;;;;;;;;:36;;-1:-1:-1;;7064:36:37;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:37;7137:7;-1:-1:-1;;;;;7119:40:37;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;3867:137::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:37;;;;;;;;;;;;;;;3867:137::o;539:7393:0:-;;;;;;;",
  "deployedSourceMap": "539:7393:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3514:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3566:214:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2398:184:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4185:121:37:-;;;;;;:::i;:::-;;:::i;4556:228::-;;;;;;:::i;:::-;;:::i;:::-;;5740:214;;;;;;:::i;:::-;;:::i;2859:105:0:-;;;:::i;7307:623::-;;;;;;:::i;:::-;;:::i;3696:182::-;;;;;;:::i;:::-;;:::i;2655:134::-;;;:::i;:::-;;;;;;;:::i;583:66::-;;;:::i;4163:109::-;;;:::i;3047:186::-;;;;;;:::i;:::-;;:::i;3867:137:37:-;;;;;;:::i;:::-;;:::i;3307:136:0:-;;;:::i;2363:49:37:-;;;:::i;5940:932:0:-;;;;;;:::i;:::-;;:::i;3953:138::-;;;:::i;5018:231:37:-;;;;;;:::i;:::-;;:::i;4727:760:0:-;;;;;;:::i;:::-;;:::i;3514:107::-;3588:21;:28;3514:107;:::o;3566:214:37:-;3651:4;-1:-1:-1;;;;;;3674:47:37;;-1:-1:-1;;;3674:47:37;;:99;;;3737:36;3761:11;3737:23;:36::i;:::-;3667:106;;3566:214;;;;:::o;2398:184:0:-;2497:21;2544:20;2565:11;;2544:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:33:0;;2398:184;-1:-1:-1;;;2398:184:0:o;4185:121:37:-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121::o;4556:228::-;4648:41;4656:18;4669:4;4656:12;:18::i;:::-;4676:12;:10;:12::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:37;;;;;;;:::i;:::-;;;;;;;;;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;5740:214::-;5846:12;:10;:12::i;:::-;-1:-1:-1;;;;;5835:23:37;:7;-1:-1:-1;;;;;5835:23:37;;5827:83;;;;-1:-1:-1;;;5827:83:37;;;;;;;:::i;:::-;5921:26;5933:4;5939:7;5921:11;:26::i;2859:105:0:-;2932:20;:27;2859:105;:::o;7307:623::-;7460:8;;1880:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2016:21:0;;1978:16;;-1:-1:-1;2016:26:0;;;-1:-1:-1;2001:108:0;;;;-1:-1:-1;;;2001:108:0;;;;;;;:::i;:::-;697:42:::1;-1:-1:-1::0;;;;;7491:48:0::1;:22;7514:8;;7491:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;7491:32:0::1;:48;7476:129;;;;-1:-1:-1::0;;;7476:129:0::1;;;;;;;:::i;:::-;7646:20;7611:22;7634:8;;7611:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:55;;-1:-1:-1;;;;;7611:55:0;;;::::1;-1:-1:-1::0;;;;;;7611:55:0;;::::1;::::0;;;::::1;::::0;;7672:31:::1;;:::i;:::-;7725:9;;7709:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;7709:25:0;;;-1:-1:-1;7740:26:0::1;::::0;;::::1;7709:25;7740:26:::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;7758:8;;;;;;7740:26;::::1;7758:8:::0;;;;7740:26;::::1;;::::0;::::1;::::0;;;-1:-1:-1;7740:15:0::1;::::0;;::::1;:26:::0;;;;-1:-1:-1;;;;;7772:47:0;::::1;:24;::::0;::::1;:47:::0;7825:22:::1;:37:::0;;::::1;::::0;::::1;::::0;;;;;;;;7740:8;;7825:37:::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;7825:37:0::1;::::0;-1:-1:-1;7825:37:0;;-1:-1:-1;7825:37:0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7825:37:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7825:37:0::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;7825:37:0::1;-1:-1:-1::0;;;;;7825:37:0;;::::1;::::0;;;::::1;::::0;;7873:52;::::1;::::0;7894:8;;;;7873:52:::1;:::i;:::-;;;;;;;;;7904:20;7873:52;;;;;;:::i;:::-;;;;;;;;2115:1;7307:623:::0;;;;;;;:::o;3696:182::-;3794:21;3841:22;3864:8;;3841:32;;;;;;;:::i;2655:134::-;2723:24;2764:20;2757:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2757:27:0;;;-1:-1:-1;;2757:27:0;;;;;;-1:-1:-1;;;;;2757:27:0;;;;;;;;;;;;;;;;;;;;;;;;;2655:134;:::o;583:66::-;623:26;583:66;:::o;4163:109::-;4238:22;:29;4163:109;:::o;3047:186::-;3147:21;3194;3216:11;;3194:34;;;;;;;:::i;3867:137:37:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:37;;;;;;;;;;;;;;;3867:137::o;3307:136:0:-;3376:24;3417:21;3410:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3410:28:0;;;-1:-1:-1;;3410:28:0;;;;;;-1:-1:-1;;;;;3410:28:0;;;;;;;;;;;;;;;;;;2363:49:37;2408:4;2363:49;:::o;5940:932:0:-;6095:9;;1880:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2016:21:0;;1978:16;;-1:-1:-1;2016:26:0;;;-1:-1:-1;2001:108:0;;;;-1:-1:-1;;;2001:108:0;;;;;;;:::i;:::-;6121:11:::1;;1880:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;2016:21:0;;1978:16;;-1:-1:-1;2016:26:0;::::1;::::0;-1:-1:-1;2001:108:0::1;;;;-1:-1:-1::0;;;2001:108:0::1;;;;;;;:::i;:::-;697:42:::2;-1:-1:-1::0;;;;;6282:50:0::2;:21;6304:11;;6282:34;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;6282:34:0::2;:50;6267:171;;;;-1:-1:-1::0;;;6267:171:0::2;;;;;;;:::i;:::-;6487:2;6459:30:::0;::::2;6444:97;;;;-1:-1:-1::0;;;6444:97:0::2;;;;;;;:::i;:::-;6584:20;6547:21;6569:11;;6547:34;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:57;;-1:-1:-1;;;;;6547:57:0;;;::::2;-1:-1:-1::0;;;;;;6547:57:0;;::::2;::::0;;;::::2;::::0;;6610:31:::2;;:::i;:::-;6663:9;;6647:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;;6647:25:0;;;-1:-1:-1;6678:29:0::2;::::0;;::::2;6647:25;6678:29:::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;6696:11;;;;;;6678:29;::::2;6696:11:::0;;;;6678:29;::::2;;::::0;::::2;::::0;;;-1:-1:-1;6678:15:0::2;::::0;;::::2;:29:::0;;;;-1:-1:-1;;;;;6713:47:0;::::2;:24;::::0;::::2;:47:::0;6766:21:::2;:36:::0;;::::2;::::0;::::2;::::0;;;;;;;;;;6678:8;;6766:36;;;::::2;::::0;::::2;::::0;-1:-1:-1;6766:36:0::2;::::0;-1:-1:-1;6766:36:0;;-1:-1:-1;6766:36:0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;6766:36:0::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;6766:36:0::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;;;6766:36:0::2;-1:-1:-1::0;;;;;6766:36:0;;::::2;::::0;;;::::2;::::0;;6813:54;::::2;::::0;6833:11;;;;6813:54:::2;:::i;:::-;;;;;;;;;6846:20;6813:54;;;;;;:::i;:::-;;;;;;;;2115:1;::::1;;5940:932:::0;;;;;;;:::o;3953:138::-;4023:24;4064:22;4057:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4057:29:0;;;-1:-1:-1;;4057:29:0;;;;;;-1:-1:-1;;;;;4057:29:0;;;;;;;;;;;;;;;;;;5018:231:37;5111:41;5119:18;5132:4;5119:12;:18::i;5111:41::-;5103:102;;;;-1:-1:-1;;;5103:102:37;;;;;;;:::i;4727:760:0:-;4881:9;;1880:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2016:21:0;;1978:16;;-1:-1:-1;2016:26:0;;;-1:-1:-1;2001:108:0;;;;-1:-1:-1;;;2001:108:0;;;;;;;:::i;:::-;4907:11:::1;;1880:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;2016:21:0;;1978:16;;-1:-1:-1;2016:26:0;::::1;::::0;-1:-1:-1;2001:108:0::1;;;;-1:-1:-1::0;;;2001:108:0::1;;;;;;;:::i;:::-;697:42:::2;-1:-1:-1::0;;;;;4941:49:0::2;:20;4962:11;;4941:33;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;4941:33:0::2;:49;4926:130;;;;-1:-1:-1::0;;;4926:130:0::2;;;;;;;:::i;:::-;5105:2;5077:30:::0;::::2;5062:97;;;;-1:-1:-1::0;;;5062:97:0::2;;;;;;;:::i;:::-;5201:20;5165;5186:11;;5165:33;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:56;;-1:-1:-1;;;;;5165:56:0;;;::::2;-1:-1:-1::0;;;;;;5165:56:0;;::::2;::::0;;;::::2;::::0;;5227:31:::2;;:::i;:::-;5280:9;;5264:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;;5264:25:0;;;-1:-1:-1;5295:29:0::2;::::0;;::::2;5264:25;5295:29:::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;5313:11;;;;;;5295:29;::::2;5313:11:::0;;;;5295:29;::::2;;::::0;::::2;::::0;;;-1:-1:-1;5295:15:0::2;::::0;;::::2;:29:::0;;;;-1:-1:-1;;;;;5330:47:0;::::2;:24;::::0;::::2;:47:::0;5383:20:::2;:35:::0;;;;::::2;::::0;;;;;;;;5295:8;;5383:35:::2;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;5383:35:0::2;::::0;-1:-1:-1;5383:35:0;;-1:-1:-1;5383:35:0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5383:35:0::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5383:35:0::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;;;5383:35:0::2;-1:-1:-1::0;;;;;5383:35:0;;::::2;::::0;;;::::2;::::0;;5429:53;::::2;::::0;5448:11;;;;5429:53:::2;:::i;:::-;;;;;;;;;5461:20;5429:53;;;;;;:::i;763:155:58:-:0;-1:-1:-1;;;;;;871:40:58;;-1:-1:-1;;;871:40:58;763:155;;;:::o;586:96:55:-;665:10;586:96;:::o;6952:224:37:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:37;;;;;;;;;:36;;-1:-1:-1;;7064:36:37;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:37;7137:7;-1:-1:-1;;;;;7119:40:37;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:37;;;;;;;;;:37;;-1:-1:-1;;7294:37:37;;;7377:12;:10;:12::i;:::-;-1:-1:-1;;;;;7350:40:37;7368:7;-1:-1:-1;;;;;7350:40:37;7362:4;7350:40;;;;;;;;;;7182:225;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:198:61;84:20;;-1:-1:-1;;;;;133:54:61;;123:65;;113:2;;202:1;199;192:12;217:378;;;335:3;328:4;320:6;316:17;312:27;302:2;;360:8;350;343:26;302:2;-1:-1:-1;390:20:61;;433:18;422:30;;419:2;;;472:8;462;455:26;419:2;516:4;508:6;504:17;492:29;;568:3;561:4;552:6;544;540:19;536:30;533:39;530:2;;;585:1;582;575:12;530:2;292:303;;;;;:::o;600:190::-;;712:2;700:9;691:7;687:23;683:32;680:2;;;733:6;725;718:22;680:2;-1:-1:-1;761:23:61;;670:120;-1:-1:-1;670:120:61:o;795:266::-;;;924:2;912:9;903:7;899:23;895:32;892:2;;;945:6;937;930:22;892:2;986:9;973:23;963:33;;1015:40;1051:2;1040:9;1036:18;1015:40;:::i;:::-;1005:50;;882:179;;;;;:::o;1066:306::-;;1177:2;1165:9;1156:7;1152:23;1148:32;1145:2;;;1198:6;1190;1183:22;1145:2;1229:23;;-1:-1:-1;;;;;;1281:32:61;;1271:43;;1261:2;;1333:6;1325;1318:22;1261:2;1361:5;1135:237;-1:-1:-1;;;1135:237:61:o;1377:433::-;;;1509:2;1497:9;1488:7;1484:23;1480:32;1477:2;;;1530:6;1522;1515:22;1477:2;1575:9;1562:23;1608:18;1600:6;1597:30;1594:2;;;1645:6;1637;1630:22;1594:2;1689:61;1742:7;1733:6;1722:9;1718:22;1689:61;:::i;:::-;1769:8;;1663:87;;-1:-1:-1;1467:343:61;-1:-1:-1;;;;1467:343:61:o;1815:831::-;;;;;;2001:2;1989:9;1980:7;1976:23;1972:32;1969:2;;;2022:6;2014;2007:22;1969:2;2067:9;2054:23;2096:18;2137:2;2129:6;2126:14;2123:2;;;2158:6;2150;2143:22;2123:2;2202:61;2255:7;2246:6;2235:9;2231:22;2202:61;:::i;:::-;2282:8;;-1:-1:-1;2176:87:61;-1:-1:-1;2370:2:61;2355:18;;2342:32;;-1:-1:-1;2386:16:61;;;2383:2;;;2420:6;2412;2405:22;2383:2;;2464:63;2519:7;2508:8;2497:9;2493:24;2464:63;:::i;:::-;2546:8;;-1:-1:-1;2438:89:61;-1:-1:-1;2600:40:61;;-1:-1:-1;2636:2:61;2621:18;;2600:40;:::i;:::-;2590:50;;1959:687;;;;;;;;:::o;2651:478::-;;2733:5;2727:12;2760:6;2755:3;2748:19;2785:3;2797:162;2811:6;2808:1;2805:13;2797:162;;;2873:4;2929:13;;;2925:22;;2919:29;2901:11;;;2897:20;;2890:59;2826:12;2797:162;;;2977:6;2974:1;2971:13;2968:2;;;3043:3;3036:4;3027:6;3022:3;3018:16;3014:27;3007:40;2968:2;-1:-1:-1;3111:2:61;3090:15;-1:-1:-1;;3086:29:61;3077:39;;;;3118:4;3073:50;;2703:426;-1:-1:-1;;2703:426:61:o;3134:275::-;;3319:6;3311;3306:3;3293:33;3345:16;;3370:15;;;3345:16;3283:126;-1:-1:-1;3283:126:61:o;3414:226::-;-1:-1:-1;;;;;3578:55:61;;;;3560:74;;3548:2;3533:18;;3515:125::o;3645:1334::-;3878:2;3930:21;;;4000:13;;3903:18;;;4022:22;;;3645:1334;;3878:2;4063;;4081:18;;;;4141:15;;;4126:31;;4122:40;;4185:15;;;3645:1334;4231:719;4245:6;4242:1;4239:13;4231:719;;;4338:2;4334:7;4322:9;4314:6;4310:22;4306:36;4301:3;4294:49;4372:6;4366:13;4402:4;4445:2;4439:9;4476:2;4468:6;4461:18;4506:50;4552:2;4544:6;4540:15;4526:12;4506:50;:::i;:::-;4492:64;;;4605:2;4601;4597:11;4591:18;4658:6;4650;4646:19;4641:2;4633:6;4629:15;4622:44;4693:43;4729:6;4713:14;4693:43;:::i;:::-;4783:11;;;4777:18;-1:-1:-1;;;;;4773:67:61;4756:15;;;4749:92;;;;-1:-1:-1;4928:12:61;;;;4679:57;-1:-1:-1;4893:15:61;;;;4267:1;4260:9;4231:719;;;-1:-1:-1;4967:6:61;;3858:1121;-1:-1:-1;;;;;;;;3858:1121:61:o;4984:187::-;5149:14;;5142:22;5124:41;;5112:2;5097:18;;5079:92::o;5176:177::-;5322:25;;;5310:2;5295:18;;5277:76::o;5358:411::-;5560:2;5542:21;;;5599:2;5579:18;;;5572:30;5638:34;5633:2;5618:18;;5611:62;5709:17;5704:2;5689:18;;5682:45;5759:3;5744:19;;5532:237::o;5774:414::-;5976:2;5958:21;;;6015:2;5995:18;;;5988:30;6054:34;6049:2;6034:18;;6027:62;6125:20;6120:2;6105:18;;6098:48;6178:3;6163:19;;5948:240::o;6193:412::-;6395:2;6377:21;;;6434:2;6414:18;;;6407:30;6473:34;6468:2;6453:18;;6446:62;6544:18;6539:2;6524:18;;6517:46;6595:3;6580:19;;6367:238::o;6610:415::-;6812:2;6794:21;;;6851:2;6831:18;;;6824:30;6890:34;6885:2;6870:18;;6863:62;6961:21;6956:2;6941:18;;6934:49;7015:3;7000:19;;6784:241::o;7030:400::-;7232:2;7214:21;;;7271:2;7251:18;;;7244:30;7310:34;7305:2;7290:18;;7283:62;-1:-1:-1;;;7376:2:61;7361:18;;7354:34;7420:3;7405:19;;7204:226::o;7435:411::-;7637:2;7619:21;;;7676:2;7656:18;;;7649:30;7715:34;7710:2;7695:18;;7688:62;7786:17;7781:2;7766:18;;7759:45;7836:3;7821:19;;7609:237::o;8033:380::-;8118:1;8108:12;;8165:1;8155:12;;;8176:2;;8230:4;8222:6;8218:17;8208:27;;8176:2;8283;8275:6;8272:14;8252:18;8249:38;8246:2;;;8329:10;8324:3;8320:20;8317:1;8310:31;8364:4;8361:1;8354:15;8392:4;8389:1;8382:15;8246:2;;8088:325;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n// pragma experimental ABIEncoderV2; // SJS: not needed with pragma v0.8\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n// import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // SJS: already in SwapManager.sol\n// import \"@openzeppelin/contracts/token/ERC721/IERC721.sol\"; // SJS: already in SwapManager.sol\n\n/// @author The PRIVI Blockchain team\n/// @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform\n\ncontract BridgeManager is AccessControl {\n  bytes32 public constant REGISTER_ROLE = keccak256(\"REGISTER_ROLE\");\n  address private constant ZERO_ADDRESS =\n    0x0000000000000000000000000000000000000000;\n\n  // Structure to handle registered token data\n  struct registeredToken {\n    string name;\n    string symbol;\n    address deployedAddress;\n  }\n\n  // ERC20 token types\n  registeredToken[] private erc20RegisteredArray;\n  mapping(string => address) private contractAddressERC20;\n\n  // ERC721 token types\n  registeredToken[] private erc721RegisteredArray;\n  mapping(string => address) private contractAddressERC721;\n\n  // ERC1155 token types\n  registeredToken[] private erc1155RegisteredArray;\n  mapping(string => address) private contractAddressERC1155;\n\n  event RegisterERC20Token(string indexed name, address tokenAddress);\n  event UnRegisterERC20Token(string indexed name);\n  event RegisterERC721Token(string indexed name, address tokenAddress);\n  event UnRegisterERC721Token(string indexed name);\n  event RegisterERC1155Token(string indexed name, address tokenAddress);\n  event UnRegisterERC1155Token(string indexed name);\n\n  /**\n   * @notice  Modifier to require 'tokenName' and 'tokenSymbol' are not empty\n   * @param   tokenNameToCheck The token or symbol name to be checked\n   * @dev     reverts if tokenNameToCheck is empty\n   */\n  modifier nameIsNotEmpty(string memory tokenNameToCheck) {\n    bytes memory bytesTokenName = bytes(tokenNameToCheck);\n    require(\n      bytesTokenName.length != 0,\n      \"BridgeManager: token name and symbol can't be empty\"\n    );\n    _;\n  }\n\n  /**\n   * @notice Constructor to assign all roles to contract creator\n   */\n  constructor() {\n    _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    _setupRole(REGISTER_ROLE, _msgSender());\n  }\n\n  /**\n   * @notice Get the contract address of a registered ERC20 token\n   */\n  function getErc20AddressRegistered(string calldata tokenSymbol)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC20[tokenSymbol];\n  }\n\n  /**\n   * @notice Get an array of all registered ERC20 tokens\n   */\n  function getAllErc20Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc20RegisteredArray;\n  }\n\n  /**\n   * @notice Get count of all registered ERC20 tokens\n   */\n  function getAllErc20Count() external view returns (uint256) {\n    return erc20RegisteredArray.length;\n  }\n\n  /**\n   * @notice Get the contract address of a registered ERC721 token\n   */\n  function getErc721AddressRegistered(string calldata tokenSymbol)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC721[tokenSymbol];\n  }\n\n  /**\n   * @notice Get an array of all registered ERC721 tokens\n   */\n  function getAllErc721Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc721RegisteredArray;\n  }\n\n  /**\n   * @notice Get count of all registered ERC721 tokens\n   */\n  function getAllErc721Count() external view returns (uint256) {\n    return erc721RegisteredArray.length;\n  }\n\n  /**\n   * @notice Get the address of a registered ERC1155 token\n   */\n  function getErc1155AddressRegistered(string calldata tokenURI)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC1155[tokenURI];\n  }\n\n  /**\n   * @notice Get an array of all registered ERC1155 tokens\n   */\n  function getAllErc1155Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc1155RegisteredArray;\n  }\n\n  /**\n   * @notice Get count of all registered ERC1155 tokens\n   */\n  function getAllErc1155Count() external view returns (uint256) {\n    return erc1155RegisteredArray.length;\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC20 token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name and symbol can't be above 25 characters\n   * @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n   * @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n   * @param   tokenContractAddress The contract address of the ERC20 Token\n   */\n  function registerTokenERC20(\n    string calldata tokenName,\n    string calldata tokenSymbol,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenName) nameIsNotEmpty(tokenSymbol) {\n    require(\n      contractAddressERC20[tokenSymbol] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\"\n    );\n    require(\n      bytes(tokenSymbol).length < 25,\n      \"BridgeManager: token Symbol too long\"\n    );\n    contractAddressERC20[tokenSymbol] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenSymbol;\n    regToken.deployedAddress = tokenContractAddress;\n    erc20RegisteredArray.push(regToken);\n    emit RegisterERC20Token(tokenSymbol, tokenContractAddress);\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC721 Token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name and symbol can't be above 25 characters\n   * @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n   * @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n   * @param   tokenContractAddress Contract address of the ERC721 token\n   */\n  function registerTokenERC721(\n    string calldata tokenName,\n    string calldata tokenSymbol,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenName) nameIsNotEmpty(tokenSymbol) {\n    // require(hasRole(REGISTER_ROLE, _msgSender()),\n    //     \"BridgeManager: must have REGISTER_ROLE to register a token\");\n    require(\n      contractAddressERC721[tokenSymbol] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\" //TODO: token symbol already registered\n    );\n    require(\n      bytes(tokenSymbol).length < 25,\n      \"BridgeManager: token Symbol too long\"\n    );\n    contractAddressERC721[tokenSymbol] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenSymbol;\n    regToken.deployedAddress = tokenContractAddress;\n    erc721RegisteredArray.push(regToken);\n    emit RegisterERC721Token(tokenSymbol, tokenContractAddress);\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC1155 Token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name and symbol can't be above 25 characters\n   * @param   tokenName The name of the token to be registered (e.g.: Kitty)\n   * @param   tokenURI The URI of the token to be registered\n   * @param   tokenContractAddress Contract address of the ERC1155 token\n   */\n  function registerTokenERC1155(\n    string calldata tokenName,\n    string calldata tokenURI,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenURI) {\n    require(\n      contractAddressERC1155[tokenURI] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\"\n    );\n    contractAddressERC1155[tokenURI] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenURI;\n    regToken.deployedAddress = tokenContractAddress;\n    erc1155RegisteredArray.push(regToken);\n    emit RegisterERC1155Token(tokenURI, tokenContractAddress);\n  }\n}\n",
  "sourcePath": "/Users/sergijuanati/Dropbox/Docs/2. Work/16. Privi/3. Code/getcache_ethereum/contracts/BridgeManager.sol",
  "ast": {
    "absolutePath": "/Users/sergijuanati/Dropbox/Docs/2. Work/16. Privi/3. Code/getcache_ethereum/contracts/BridgeManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        6254
      ],
      "BridgeManager": [
        436
      ],
      "Context": [
        9621
      ],
      "ERC165": [
        9909
      ],
      "IAccessControl": [
        5974
      ],
      "IERC165": [
        9921
      ]
    },
    "id": 437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 6255,
        "src": "130:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "565:13:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "565:13:0"
          }
        ],
        "contractDependencies": [
          5974,
          6254,
          9621,
          9909,
          9921
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "383:155:0",
          "text": "@author The PRIVI Blockchain team\n @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform"
        },
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          6254,
          9909,
          9921,
          5974,
          9621
        ],
        "name": "BridgeManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "74f53317",
            "id": 10,
            "mutability": "constant",
            "name": "REGISTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "583:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454749535445525f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "633:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  },
                  "value": "REGISTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "623:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "623:26:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 13,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "653:86:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "697:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "BridgeManager.registeredToken",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "820:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "820:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "837:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "837:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "deployedAddress",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "856:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "856:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "registeredToken",
            "nodeType": "StructDefinition",
            "scope": 436,
            "src": "791:93:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "erc20RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "911:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "911:15:0"
                },
                "referencedDeclaration": 20,
                "src": "911:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 23,
              "nodeType": "ArrayTypeName",
              "src": "911:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "contractAddressERC20",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "961:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "969:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "961:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "979:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "erc721RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1045:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "1045:15:0"
                },
                "referencedDeclaration": 20,
                "src": "1045:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 31,
              "nodeType": "ArrayTypeName",
              "src": "1045:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "contractAddressERC721",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1096:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1104:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1096:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1114:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "erc1155RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1182:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "1182:15:0"
                },
                "referencedDeclaration": 20,
                "src": "1182:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 39,
              "nodeType": "ArrayTypeName",
              "src": "1182:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "contractAddressERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1234:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1242:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1234:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 50,
            "name": "RegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1321:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1342:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:43:0"
            },
            "src": "1296:68:0"
          },
          {
            "anonymous": false,
            "id": 54,
            "name": "UnRegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1394:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1393:21:0"
            },
            "src": "1367:48:0"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "RegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1444:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1465:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1443:43:0"
            },
            "src": "1418:69:0"
          },
          {
            "anonymous": false,
            "id": 64,
            "name": "UnRegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1518:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:21:0"
            },
            "src": "1490:49:0"
          },
          {
            "anonymous": false,
            "id": 70,
            "name": "RegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1569:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1590:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:43:0"
            },
            "src": "1542:70:0"
          },
          {
            "anonymous": false,
            "id": 74,
            "name": "UnRegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1644:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1643:21:0"
            },
            "src": "1615:50:0"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1936:185:0",
              "statements": [
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "bytesTokenName",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1942:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1942:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "tokenNameToCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1978:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1972:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1972:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87,
                            "name": "bytesTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "2016:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2016:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2016:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206e616d6520616e642073796d626f6c2063616e277420626520656d707479",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168",
                          "typeString": "literal_string \"BridgeManager: token name and symbol can't be empty\""
                        },
                        "value": "BridgeManager: token name and symbol can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168",
                          "typeString": "literal_string \"BridgeManager: token name and symbol can't be empty\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2001:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:108:0"
                },
                {
                  "id": 94,
                  "nodeType": "PlaceholderStatement",
                  "src": "2115:1:0"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "1669:208:0",
              "text": " @notice  Modifier to require 'tokenName' and 'tokenSymbol' are not empty\n @param   tokenNameToCheck The token or symbol name to be checked\n @dev     reverts if tokenNameToCheck is empty"
            },
            "id": 96,
            "name": "nameIsNotEmpty",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "tokenNameToCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1904:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1903:32:0"
            },
            "src": "1880:241:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "2216:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5996,
                        "src": "2233:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "2253:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6168,
                      "src": "2222:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "REGISTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2283:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 108,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "2298:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6168,
                      "src": "2272:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:39:0"
                }
              ]
            },
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "2125:74:0",
              "text": " @notice Constructor to assign all roles to contract creator"
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:0:0"
            },
            "scope": 436,
            "src": "2202:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2522:60:0",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "2528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2544:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 124,
                      "indexExpression": {
                        "id": 123,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2565:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2544:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2528:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2528:49:0"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "2320:75:0",
              "text": " @notice Get the contract address of a registered ERC20 token"
            },
            "functionSelector": "10a43eba",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2433:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:29:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2497:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2496:23:0"
            },
            "scope": 436,
            "src": "2398:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2751:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "name": "erc20RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "2764:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2757:27:0"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "2586:66:0",
              "text": " @notice Get an array of all registered ERC20 tokens"
            },
            "functionSelector": "53206452",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2685:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2723:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 131,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "2723:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "2723:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 133,
                    "nodeType": "ArrayTypeName",
                    "src": "2723:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2722:26:0"
            },
            "scope": 436,
            "src": "2655:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2919:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 145,
                      "name": "erc20RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2932:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2932:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "2925:34:0"
                }
              ]
            },
            "documentation": {
              "id": 140,
              "nodeType": "StructuredDocumentation",
              "src": "2793:63:0",
              "text": " @notice Get count of all registered ERC20 tokens"
            },
            "functionSelector": "455686c3",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2884:2:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2910:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:9:0"
            },
            "scope": 436,
            "src": "2859:105:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "3172:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "3178:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 158,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3194:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 160,
                      "indexExpression": {
                        "id": 159,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "3216:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3194:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3178:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:50:0"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "2968:76:0",
              "text": " @notice Get the contract address of a registered ERC721 token"
            },
            "functionSelector": "91567da8",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc721AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3083:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3082:29:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3147:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3146:23:0"
            },
            "scope": 436,
            "src": "3047:186:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "3404:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 172,
                    "name": "erc721RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "3417:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 173,
                  "nodeType": "Return",
                  "src": "3410:28:0"
                }
              ]
            },
            "documentation": {
              "id": 165,
              "nodeType": "StructuredDocumentation",
              "src": "3237:67:0",
              "text": " @notice Get an array of all registered ERC721 tokens"
            },
            "functionSelector": "9f45c1d3",
            "id": 175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3338:2:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "3376:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 168,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 167,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "3376:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "3376:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 169,
                    "nodeType": "ArrayTypeName",
                    "src": "3376:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:26:0"
            },
            "scope": 436,
            "src": "3307:136:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "3575:46:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 181,
                      "name": "erc721RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3588:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3588:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 180,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "3581:35:0"
                }
              ]
            },
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "3447:64:0",
              "text": " @notice Get count of all registered ERC721 tokens"
            },
            "functionSelector": "01ab669c",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:2:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "3566:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3565:9:0"
            },
            "scope": 436,
            "src": "3514:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "3819:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 193,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "3825:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3841:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "id": 195,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3864:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3841:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3825:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3825:48:0"
                }
              ]
            },
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "3625:68:0",
              "text": " @notice Get the address of a registered ERC1155 token"
            },
            "functionSelector": "4dd1b5f8",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc1155AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3733:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:26:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3794:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3793:23:0"
            },
            "scope": 436,
            "src": "3696:182:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4051:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 208,
                    "name": "erc1155RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "4064:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "4057:29:0"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "3882:68:0",
              "text": " @notice Get an array of all registered ERC1155 tokens"
            },
            "functionSelector": "c7092a82",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4023:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 203,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "4023:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "4023:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4023:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4022:26:0"
            },
            "scope": 436,
            "src": "3953:138:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "4225:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 217,
                      "name": "erc1155RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4238:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4238:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "4231:36:0"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4095:65:0",
              "text": " @notice Get count of all registered ERC1155 tokens"
            },
            "functionSelector": "90344f62",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4190:2:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "4216:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4215:9:0"
            },
            "scope": 436,
            "src": "4163:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "4920:567:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 238,
                            "name": "contractAddressERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "4941:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 240,
                          "indexExpression": {
                            "id": 239,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4962:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4941:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 241,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4978:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4941:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4998:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4926:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4926:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 249,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "5083:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5077:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 247,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5077:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5077:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5077:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5105:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "5077:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5115:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5062:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:97:0"
                },
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 257,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5165:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 259,
                      "indexExpression": {
                        "id": 258,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "5186:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5165:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 260,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5201:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5165:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "5165:56:0"
                },
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "5227:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 263,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "5227:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "5227:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5227:31:0"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 267,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5264:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "5264:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 270,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "5280:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5264:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5264:25:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5295:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "5295:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "5313:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5295:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5295:29:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 279,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5330:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "5330:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 282,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5357:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5330:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "5330:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5409:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 285,
                        "name": "erc20RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5383:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5383:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "5448:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 293,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "5461:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 291,
                      "name": "RegisterERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5429:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "EmitStatement",
                  "src": "5424:58:0"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "4276:448:0",
              "text": " @notice  Register the contract address of an ERC20 token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n @param   tokenContractAddress The contract address of the ERC20 Token"
            },
            "functionSelector": "dd2c859c",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 231,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 224,
                    "src": "4881:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 232,
                "modifierName": {
                  "id": 230,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "4866:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4866:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 234,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "4907:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "id": 233,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "4892:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4892:27:0"
              }
            ],
            "name": "registerTokenERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4760:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4791:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4791:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4824:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4754:102:0"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:0:0"
            },
            "scope": 436,
            "src": "4727:760:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "6134:738:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 314,
                            "name": "contractAddressERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "6282:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 316,
                          "indexExpression": {
                            "id": 315,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6304:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6282:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 317,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "6320:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6282:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6340:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6267:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6267:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "6267:171:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 325,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6465:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6459:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 323,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6459:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6459:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6459:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6487:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "6459:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6497:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6444:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:97:0"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 333,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6547:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "id": 334,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6569:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6547:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 336,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "6584:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6547:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "6547:57:0"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "6610:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 340,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 339,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "6610:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "6610:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6610:31:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6647:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "6647:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 346,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "6663:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6647:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "6647:25:0"
                },
                {
                  "expression": {
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 349,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6678:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "6678:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 352,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "6696:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6678:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "6678:29:0"
                },
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 355,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6713:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6713:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 358,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "6740:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6713:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 364,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6793:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 361,
                        "name": "erc721RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6766:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6766:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6766:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6766:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6833:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 369,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "6846:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 367,
                      "name": "RegisterERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6813:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6813:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "6808:59:0"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "5491:446:0",
              "text": " @notice  Register the contract address of an ERC721 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n @param   tokenContractAddress Contract address of the ERC721 token"
            },
            "functionSelector": "c082713b",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 307,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "6095:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 308,
                "modifierName": {
                  "id": 306,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "6080:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6080:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 310,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "6121:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 311,
                "modifierName": {
                  "id": 309,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "6106:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6106:27:0"
              }
            ],
            "name": "registerTokenERC721",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "5974:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5974:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6005:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6038:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:102:0"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6134:0:0"
            },
            "scope": 436,
            "src": "5940:932:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "7470:460:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 387,
                            "name": "contractAddressERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "7491:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 389,
                          "indexExpression": {
                            "id": 388,
                            "name": "tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "7514:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7491:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 390,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "7527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7491:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7547:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7476:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "7476:129:0"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 395,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7611:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 397,
                      "indexExpression": {
                        "id": 396,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "7634:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7611:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 398,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "7646:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7611:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "7611:55:0"
                },
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 434,
                      "src": "7672:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 401,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "7672:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "7672:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7672:31:0"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 405,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7709:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "7709:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 408,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "7725:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7709:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "7709:25:0"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 411,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7740:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "7740:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 414,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "7758:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7740:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "7740:26:0"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 417,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7772:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "7772:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "7799:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7772:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "7772:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 426,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7853:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "erc1155RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7825:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7825:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7825:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "7825:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 430,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "7894:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 431,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "7904:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 429,
                      "name": "RegisterERC1155Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "7873:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7873:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "EmitStatement",
                  "src": "7868:57:0"
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "6876:428:0",
              "text": " @notice  Register the contract address of an ERC1155 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Kitty)\n @param   tokenURI The URI of the token to be registered\n @param   tokenContractAddress Contract address of the ERC1155 token"
            },
            "functionSelector": "4d4825a0",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 383,
                    "name": "tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "7460:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 384,
                "modifierName": {
                  "id": 382,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "7445:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7445:24:0"
              }
            ],
            "name": "registerTokenERC1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7342:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7373:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7373:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7403:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7336:99:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7470:0:0"
            },
            "scope": 436,
            "src": "7307:623:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 437,
        "src": "539:7393:0"
      }
    ],
    "src": "32:7901:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/sergijuanati/Dropbox/Docs/2. Work/16. Privi/3. Code/getcache_ethereum/contracts/BridgeManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        6254
      ],
      "BridgeManager": [
        436
      ],
      "Context": [
        9621
      ],
      "ERC165": [
        9909
      ],
      "IAccessControl": [
        5974
      ],
      "IERC165": [
        9921
      ]
    },
    "id": 437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 6255,
        "src": "130:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "565:13:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "565:13:0"
          }
        ],
        "contractDependencies": [
          5974,
          6254,
          9621,
          9909,
          9921
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "383:155:0",
          "text": "@author The PRIVI Blockchain team\n @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform"
        },
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          6254,
          9909,
          9921,
          5974,
          9621
        ],
        "name": "BridgeManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "74f53317",
            "id": 10,
            "mutability": "constant",
            "name": "REGISTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "583:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454749535445525f524f4c45",
                  "id": 8,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "633:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  },
                  "value": "REGISTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  }
                ],
                "id": 7,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "623:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "623:26:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 13,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "653:86:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "697:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "BridgeManager.registeredToken",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "820:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "820:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "837:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "837:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "deployedAddress",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "856:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "856:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "registeredToken",
            "nodeType": "StructDefinition",
            "scope": 436,
            "src": "791:93:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "erc20RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "911:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "911:15:0"
                },
                "referencedDeclaration": 20,
                "src": "911:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 23,
              "nodeType": "ArrayTypeName",
              "src": "911:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "contractAddressERC20",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "961:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "969:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "961:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "979:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "erc721RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1045:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "1045:15:0"
                },
                "referencedDeclaration": 20,
                "src": "1045:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 31,
              "nodeType": "ArrayTypeName",
              "src": "1045:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "contractAddressERC721",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1096:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1104:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1096:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 34,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1114:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "erc1155RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1182:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20,
                  "src": "1182:15:0"
                },
                "referencedDeclaration": 20,
                "src": "1182:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 39,
              "nodeType": "ArrayTypeName",
              "src": "1182:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "contractAddressERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "1234:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1242:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1234:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1252:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 50,
            "name": "RegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1321:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1342:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:43:0"
            },
            "src": "1296:68:0"
          },
          {
            "anonymous": false,
            "id": 54,
            "name": "UnRegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1394:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1393:21:0"
            },
            "src": "1367:48:0"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "RegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1444:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1465:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1443:43:0"
            },
            "src": "1418:69:0"
          },
          {
            "anonymous": false,
            "id": 64,
            "name": "UnRegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1518:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:21:0"
            },
            "src": "1490:49:0"
          },
          {
            "anonymous": false,
            "id": 70,
            "name": "RegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1569:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1590:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:43:0"
            },
            "src": "1542:70:0"
          },
          {
            "anonymous": false,
            "id": 74,
            "name": "UnRegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1644:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1643:21:0"
            },
            "src": "1615:50:0"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1936:185:0",
              "statements": [
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "bytesTokenName",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "1942:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1942:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "tokenNameToCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1978:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1972:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1972:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 87,
                            "name": "bytesTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "2016:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2016:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2016:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206e616d6520616e642073796d626f6c2063616e277420626520656d707479",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168",
                          "typeString": "literal_string \"BridgeManager: token name and symbol can't be empty\""
                        },
                        "value": "BridgeManager: token name and symbol can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3313d216c854dc4b3f726bcdd518506e4460308d82e101ccd53e6c2c9569168",
                          "typeString": "literal_string \"BridgeManager: token name and symbol can't be empty\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2001:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2001:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:108:0"
                },
                {
                  "id": 94,
                  "nodeType": "PlaceholderStatement",
                  "src": "2115:1:0"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "1669:208:0",
              "text": " @notice  Modifier to require 'tokenName' and 'tokenSymbol' are not empty\n @param   tokenNameToCheck The token or symbol name to be checked\n @dev     reverts if tokenNameToCheck is empty"
            },
            "id": 96,
            "name": "nameIsNotEmpty",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "tokenNameToCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1904:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1903:32:0"
            },
            "src": "1880:241:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "2216:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5996,
                        "src": "2233:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "2253:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2253:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6168,
                      "src": "2222:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "REGISTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2283:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 108,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "2298:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2298:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6168,
                      "src": "2272:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2272:39:0"
                }
              ]
            },
            "documentation": {
              "id": 97,
              "nodeType": "StructuredDocumentation",
              "src": "2125:74:0",
              "text": " @notice Constructor to assign all roles to contract creator"
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:2:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:0:0"
            },
            "scope": 436,
            "src": "2202:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2522:60:0",
              "statements": [
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "2528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 122,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2544:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 124,
                      "indexExpression": {
                        "id": 123,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2565:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2544:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2528:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2528:49:0"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "2320:75:0",
              "text": " @notice Get the contract address of a registered ERC20 token"
            },
            "functionSelector": "10a43eba",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2433:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:29:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2497:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2496:23:0"
            },
            "scope": 436,
            "src": "2398:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2751:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 136,
                    "name": "erc20RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24,
                    "src": "2764:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2757:27:0"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "2586:66:0",
              "text": " @notice Get an array of all registered ERC20 tokens"
            },
            "functionSelector": "53206452",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2685:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2723:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 131,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "2723:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "2723:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 133,
                    "nodeType": "ArrayTypeName",
                    "src": "2723:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2722:26:0"
            },
            "scope": 436,
            "src": "2655:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "2919:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 145,
                      "name": "erc20RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2932:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2932:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "2925:34:0"
                }
              ]
            },
            "documentation": {
              "id": 140,
              "nodeType": "StructuredDocumentation",
              "src": "2793:63:0",
              "text": " @notice Get count of all registered ERC20 tokens"
            },
            "functionSelector": "455686c3",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2884:2:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "2910:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:9:0"
            },
            "scope": 436,
            "src": "2859:105:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "3172:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "3178:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 158,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3194:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 160,
                      "indexExpression": {
                        "id": 159,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "3216:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3194:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3178:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:50:0"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "2968:76:0",
              "text": " @notice Get the contract address of a registered ERC721 token"
            },
            "functionSelector": "91567da8",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc721AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3083:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3082:29:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "3147:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3146:23:0"
            },
            "scope": 436,
            "src": "3047:186:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "3404:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 172,
                    "name": "erc721RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "3417:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 173,
                  "nodeType": "Return",
                  "src": "3410:28:0"
                }
              ]
            },
            "documentation": {
              "id": 165,
              "nodeType": "StructuredDocumentation",
              "src": "3237:67:0",
              "text": " @notice Get an array of all registered ERC721 tokens"
            },
            "functionSelector": "9f45c1d3",
            "id": 175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3338:2:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "3376:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 168,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 167,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "3376:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "3376:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 169,
                    "nodeType": "ArrayTypeName",
                    "src": "3376:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:26:0"
            },
            "scope": 436,
            "src": "3307:136:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "3575:46:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 181,
                      "name": "erc721RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3588:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3588:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 180,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "3581:35:0"
                }
              ]
            },
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "3447:64:0",
              "text": " @notice Get count of all registered ERC721 tokens"
            },
            "functionSelector": "01ab669c",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:2:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "3566:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3565:9:0"
            },
            "scope": 436,
            "src": "3514:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "3819:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 193,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "3825:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3841:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "id": 195,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3864:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3841:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3825:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3825:48:0"
                }
              ]
            },
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "3625:68:0",
              "text": " @notice Get the address of a registered ERC1155 token"
            },
            "functionSelector": "4dd1b5f8",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc1155AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3733:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:26:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "3794:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3794:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3793:23:0"
            },
            "scope": 436,
            "src": "3696:182:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4051:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 208,
                    "name": "erc1155RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40,
                    "src": "4064:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "4057:29:0"
                }
              ]
            },
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "3882:68:0",
              "text": " @notice Get an array of all registered ERC1155 tokens"
            },
            "functionSelector": "c7092a82",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4023:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 203,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 20,
                        "src": "4023:15:0"
                      },
                      "referencedDeclaration": 20,
                      "src": "4023:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4023:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4022:26:0"
            },
            "scope": 436,
            "src": "3953:138:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "4225:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 217,
                      "name": "erc1155RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4238:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4238:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "4231:36:0"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4095:65:0",
              "text": " @notice Get count of all registered ERC1155 tokens"
            },
            "functionSelector": "90344f62",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4190:2:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "4216:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4215:9:0"
            },
            "scope": 436,
            "src": "4163:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "4920:567:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 238,
                            "name": "contractAddressERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "4941:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 240,
                          "indexExpression": {
                            "id": 239,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4962:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4941:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 241,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4978:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4941:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4998:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4926:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4926:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 249,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "5083:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5077:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 247,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5077:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5077:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5077:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5105:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "5077:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5115:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5062:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "5062:97:0"
                },
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 257,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5165:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 259,
                      "indexExpression": {
                        "id": 258,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "5186:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5165:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 260,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5201:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5165:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "5165:56:0"
                },
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "5227:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 263,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "5227:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "5227:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5227:31:0"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 267,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5264:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "5264:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 270,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "5280:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5264:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5264:25:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 273,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5295:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "5295:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "5313:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5295:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5295:29:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 279,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5330:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "5330:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 282,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "5357:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5330:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "5330:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "5409:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 285,
                        "name": "erc20RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "5383:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5383:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "5448:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 293,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "5461:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 291,
                      "name": "RegisterERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5429:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "EmitStatement",
                  "src": "5424:58:0"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "4276:448:0",
              "text": " @notice  Register the contract address of an ERC20 token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n @param   tokenContractAddress The contract address of the ERC20 Token"
            },
            "functionSelector": "dd2c859c",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 231,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 224,
                    "src": "4881:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 232,
                "modifierName": {
                  "id": 230,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "4866:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4866:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 234,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "4907:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "id": 233,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "4892:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4892:27:0"
              }
            ],
            "name": "registerTokenERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4760:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4791:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4791:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "4824:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4754:102:0"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:0:0"
            },
            "scope": 436,
            "src": "4727:760:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "6134:738:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 314,
                            "name": "contractAddressERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "6282:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 316,
                          "indexExpression": {
                            "id": 315,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6304:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6282:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 317,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "6320:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6282:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6340:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6267:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6267:171:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "6267:171:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 325,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "6465:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6459:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 323,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6459:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6459:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6459:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6487:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "6459:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6497:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6444:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:97:0"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 333,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6547:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "id": 334,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6569:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6547:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 336,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "6584:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6547:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "6547:57:0"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "6610:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 340,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 339,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "6610:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "6610:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6610:31:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6647:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "6647:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 346,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "6663:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6647:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "6647:25:0"
                },
                {
                  "expression": {
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 349,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6678:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "6678:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 352,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "6696:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6678:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "6678:29:0"
                },
                {
                  "expression": {
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 355,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6713:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6713:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 358,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "6740:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6713:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 364,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "6793:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 361,
                        "name": "erc721RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "6766:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6766:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6766:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6766:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6833:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 369,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "6846:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 367,
                      "name": "RegisterERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "6813:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6813:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "EmitStatement",
                  "src": "6808:59:0"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "5491:446:0",
              "text": " @notice  Register the contract address of an ERC721 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Uniswap)\n @param   tokenSymbol The symbol of the token to be registered (e.g.: UNI)\n @param   tokenContractAddress Contract address of the ERC721 token"
            },
            "functionSelector": "c082713b",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 307,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "6095:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 308,
                "modifierName": {
                  "id": 306,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "6080:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6080:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 310,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "6121:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 311,
                "modifierName": {
                  "id": 309,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "6106:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6106:27:0"
              }
            ],
            "name": "registerTokenERC721",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "5974:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5974:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6005:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "6038:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6038:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:102:0"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6134:0:0"
            },
            "scope": 436,
            "src": "5940:932:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "7470:460:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 387,
                            "name": "contractAddressERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "7491:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 389,
                          "indexExpression": {
                            "id": 388,
                            "name": "tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "7514:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7491:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 390,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "7527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7491:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7547:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7476:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "7476:129:0"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 395,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "7611:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 397,
                      "indexExpression": {
                        "id": 396,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "7634:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7611:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 398,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "7646:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7611:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "7611:55:0"
                },
                {
                  "assignments": [
                    403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 434,
                      "src": "7672:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 401,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "7672:15:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "7672:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 404,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7672:31:0"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 405,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7709:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "7709:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 408,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "7725:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7709:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "7709:25:0"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 411,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7740:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "7740:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 414,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "7758:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7740:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "7740:26:0"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 417,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7772:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "7772:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "7799:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7772:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "7772:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 426,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "7853:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$20_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "erc1155RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "7825:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$20_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7825:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$20_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7825:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "7825:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 430,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "7894:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 431,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "7904:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 429,
                      "name": "RegisterERC1155Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "7873:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7873:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "EmitStatement",
                  "src": "7868:57:0"
                }
              ]
            },
            "documentation": {
              "id": 374,
              "nodeType": "StructuredDocumentation",
              "src": "6876:428:0",
              "text": " @notice  Register the contract address of an ERC1155 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name and symbol can't be above 25 characters\n @param   tokenName The name of the token to be registered (e.g.: Kitty)\n @param   tokenURI The URI of the token to be registered\n @param   tokenContractAddress Contract address of the ERC1155 token"
            },
            "functionSelector": "4d4825a0",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 383,
                    "name": "tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "7460:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 384,
                "modifierName": {
                  "id": 382,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 96,
                  "src": "7445:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7445:24:0"
              }
            ],
            "name": "registerTokenERC1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7342:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7373:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7373:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "7403:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7336:99:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7470:0:0"
            },
            "scope": 436,
            "src": "7307:623:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 437,
        "src": "539:7393:0"
      }
    ],
    "src": "32:7901:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x666E764072D446304ECEA2b50CEd6d4F7d7127d5",
      "transactionHash": "0x83872e3e727033aa33d0e97b964d9cfe94071b3b0ce438b819d579f40a56e6c9"
    },
    "4": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB63f0051e91D6705466430bDC5d5A84B767F6060",
      "transactionHash": "0xd4d9c560bea269940da704f2c55fbe7110157931c752c548b9aeb33745845523"
    },
    "97": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2f5dEE062a4bbdc1fdad1AA4817e16048381cEF0",
      "transactionHash": "0xdb35013a50385d1937811353622435b26ff0e048e225055484d8155589cc2d10"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-04-01T22:13:56.779Z",
  "devdoc": {
    "author": "The PRIVI Blockchain team",
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "registerTokenERC1155(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters",
        "params": {
          "tokenContractAddress": "Contract address of the ERC1155 token",
          "tokenName": "The name of the token to be registered (e.g.: Kitty)",
          "tokenURI": "The URI of the token to be registered"
        }
      },
      "registerTokenERC20(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters",
        "params": {
          "tokenContractAddress": "The contract address of the ERC20 Token",
          "tokenName": "The name of the token to be registered (e.g.: Uniswap)",
          "tokenSymbol": "The symbol of the token to be registered (e.g.: UNI)"
        }
      },
      "registerTokenERC721(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name and symbol can't be above 25 characters",
        "params": {
          "tokenContractAddress": "Contract address of the ERC721 token",
          "tokenName": "The name of the token to be registered (e.g.: Uniswap)",
          "tokenSymbol": "The symbol of the token to be registered (e.g.: UNI)"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "title": "Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor to assign all roles to contract creator"
      },
      "getAllErc1155Count()": {
        "notice": "Get count of all registered ERC1155 tokens"
      },
      "getAllErc1155Registered()": {
        "notice": "Get an array of all registered ERC1155 tokens"
      },
      "getAllErc20Count()": {
        "notice": "Get count of all registered ERC20 tokens"
      },
      "getAllErc20Registered()": {
        "notice": "Get an array of all registered ERC20 tokens"
      },
      "getAllErc721Count()": {
        "notice": "Get count of all registered ERC721 tokens"
      },
      "getAllErc721Registered()": {
        "notice": "Get an array of all registered ERC721 tokens"
      },
      "getErc1155AddressRegistered(string)": {
        "notice": "Get the address of a registered ERC1155 token"
      },
      "getErc20AddressRegistered(string)": {
        "notice": "Get the contract address of a registered ERC20 token"
      },
      "getErc721AddressRegistered(string)": {
        "notice": "Get the contract address of a registered ERC721 token"
      },
      "registerTokenERC1155(string,string,address)": {
        "notice": "Register the contract address of an ERC1155 Token"
      },
      "registerTokenERC20(string,string,address)": {
        "notice": "Register the contract address of an ERC20 token"
      },
      "registerTokenERC721(string,string,address)": {
        "notice": "Register the contract address of an ERC721 Token"
      }
    },
    "version": 1
  }
}