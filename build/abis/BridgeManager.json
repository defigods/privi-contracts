{
  "contractName": "BridgeManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC1155Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC20Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "RegisterERC721Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC1155Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC20Token",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "UnRegisterERC721Token",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "REGISTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "name": "getErc20AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc20Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc20Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "name": "getErc721AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc721Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc721Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "getErc1155AddressRegistered",
      "outputs": [
        {
          "internalType": "address",
          "name": "returnAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc1155Registered",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct BridgeManager.registeredToken[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getAllErc1155Count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "registerTokenERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC1155Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"RegisterERC721Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC1155Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"UnRegisterERC721Token\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc1155Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc1155Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc20Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc20Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc721Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllErc721Registered\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"internalType\":\"struct BridgeManager.registeredToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"getErc1155AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getErc20AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getErc721AddressRegistered\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"returnAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"registerTokenERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The PRIVI Blockchain team\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"registerTokenERC1155(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name can't be higher than 25\",\"params\":{\"tokenContractAddress\":\"Contract address of the ERC1155 Token\",\"tokenURI\":\"URI of the token to be registered\"}},\"registerTokenERC20(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name can't be higher than 25\",\"params\":{\"tokenContractAddress\":\"Contract address of the ERC20 Token\",\"tokenName\":\"Name of the token to be registered (e.g.: DAI, UNI)\"}},\"registerTokenERC721(string,string,address)\":{\"details\":\"- Token name and address can't be already registered          - Length of token name can't be higher than 25\",\"params\":{\"tokenContractAddress\":\"Contract address of the ERC721 Token\",\"tokenName\":\"Name of the token to be registered\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor to assign all roles to contract creator\"},\"getAllErc1155Count()\":{\"notice\":\"get count of all registered erc1155 tokens\"},\"getAllErc1155Registered()\":{\"notice\":\"get an array of all registered erc1155 tokens\"},\"getAllErc20Count()\":{\"notice\":\"get count of all registered erc20 tokens\"},\"getAllErc20Registered()\":{\"notice\":\"get an array of all registered erc20 tokens\"},\"getAllErc721Count()\":{\"notice\":\"get count of all registered erc721 tokens\"},\"getAllErc721Registered()\":{\"notice\":\"get an array of all registered erc721 tokens\"},\"getErc1155AddressRegistered(string)\":{\"notice\":\"get an address of a registered erc1155 tokens\"},\"getErc20AddressRegistered(string)\":{\"notice\":\"get an address of a registered erc20 tokens\"},\"getErc721AddressRegistered(string)\":{\"notice\":\"get an address of a registered erc721 tokens\"},\"registerTokenERC1155(string,string,address)\":{\"notice\":\"Register the contract address of an ERC1155 Token\"},\"registerTokenERC20(string,string,address)\":{\"notice\":\"Register the contract address of an ERC20 Token\"},\"registerTokenERC721(string,string,address)\":{\"notice\":\"Register the contract address of an ERC721 Token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/rekard0/Documents/WORK/PriviEthereum/PRIVIethereum/contracts/BridgeManager.sol\":\"BridgeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/home/rekard0/Documents/WORK/PriviEthereum/PRIVIethereum/contracts/BridgeManager.sol\":{\"keccak256\":\"0xadf308a2dd7f29154206c919af49eb9fc35df707c7d40203b5d7c49ef7d7736e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9b76f45d206d0b63ee2eb8e76fb923f8b0cf580e2fd6d2e5e25ff225bd20bcf\",\"dweb:/ipfs/QmcdHgNqwhBFfLaGGwRKC8xz5mDCe6px9VtwKM97RUiHns\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000286000620000226200005d565b62000061565b620000577fd1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe620000226200005d565b62000124565b3390565b6200006d828262000071565b5050565b6200007d8282620000fb565b6200006d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000b76200005d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61181780620001346000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806374f53317116100ad578063a217fddf11610071578063a217fddf1461024b578063c082713b14610253578063c7092a8214610266578063d547741f1461026e578063dd2c859c146102815761012c565b806374f533171461020d57806390344f621461021557806391567da81461021d57806391d14854146102305780639f45c1d3146102435761012c565b806336568abe116100f457806336568abe146101b7578063455686c3146101ca5780634d4825a0146101d25780634dd1b5f8146101e557806353206452146101f85761012c565b806301ab669c1461013157806301ffc9a71461014f57806310a43eba1461016f578063248a9ca31461018f5780632f2ff15d146101a2575b600080fd5b610139610294565b604051610146919061159e565b60405180910390f35b61016261015d3660046113a0565b61029a565b6040516101469190611593565b61018261017d3660046113cf565b6102c7565b60405161014691906114e8565b61013961019d36600461135d565b6102fb565b6101b56101b0366004611375565b610310565b005b6101b56101c5366004611375565b610357565b610139610399565b6101b56101e036600461140f565b61039f565b6101826101f33660046113cf565b61061b565b61020061062f565b60405161014691906114fc565b6101396107c8565b6101396107ec565b61018261022b3660046113cf565b6107f2565b61016261023e366004611375565b610806565b61020061082f565b6101396109bf565b6101b561026136600461140f565b6109c4565b610200610c9d565b6101b561027c366004611375565b610e2d565b6101b561028f36600461140f565b610e55565b60035490565b60006001600160e01b03198216637965db0b60e01b14806102bf57506102bf82611117565b90505b919050565b6000600283836040516102db9291906114d8565b908152604051908190036020019020546001600160a01b03169392505050565b60009081526020819052604090206001015490565b61032461031c836102fb565b61023e611130565b6103495760405162461bcd60e51b8152600401610340906115a7565b60405180910390fd5b6103538282611134565b5050565b61035f611130565b6001600160a01b0316816001600160a01b03161461038f5760405162461bcd60e51b815260040161034090611749565b61035382826111b9565b60015490565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250508251839250151590506103f85760405162461bcd60e51b815260040161034090611661565b60006001600160a01b0316600686866040516104159291906114d8565b908152604051908190036020019020546001600160a01b03161461044b5760405162461bcd60e51b815260040161034090611604565b6019841061046b5760405162461bcd60e51b815260040161034090611705565b826006868660405161047e9291906114d8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790556104b561123c565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815290879087908190840183828082843760009201829052506020808701959095526001600160a01b038916604087015260058054600181018255915285518051879660039093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00195506105819450859350910190611266565b50602082810151805161059a9260018501920190611266565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516105d290879087906114d8565b60405180910390207f823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c8560405161060991906114e8565b60405180910390a25050505050505050565b6000600683836040516102db9291906114d8565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156107bf5783829060005260206000209060030201604051806060016040529081600082018054610686906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546106b2906117a6565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b50505050508152602001600182018054610718906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610744906117a6565b80156107915780601f1061076657610100808354040283529160200191610791565b820191906000526020600020905b81548152906001019060200180831161077457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610653565b50505050905090565b7fd1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe81565b60055490565b6000600483836040516102db9291906114d8565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156107bf5783829060005260206000209060030201604051806060016040529081600082018054610886906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546108b2906117a6565b80156108ff5780601f106108d4576101008083540402835291602001916108ff565b820191906000526020600020905b8154815290600101906020018083116108e257829003601f168201915b50505050508152602001600182018054610918906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610944906117a6565b80156109915780601f1061096657610100808354040283529160200191610991565b820191906000526020600020905b81548152906001019060200180831161097457829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610853565b600081565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610a1d5760405162461bcd60e51b815260040161034090611661565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610a765760405162461bcd60e51b815260040161034090611661565b60006001600160a01b031660048888604051610a939291906114d8565b908152604051908190036020019020546001600160a01b031614610ac95760405162461bcd60e51b815260040161034090611604565b60198610610ae95760405162461bcd60e51b815260040161034090611705565b8460048888604051610afc9291906114d8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610b3361123c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b1660408701526003805460018101825591819052865180518897939092027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019550610c01945085935090910190611266565b506020828101518051610c1a9260018501920190611266565b5060409182015160029190910180546001600160a01b0319166001600160a01b0390921691909117905551610c5290899089906114d8565b60405180910390207f8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b9587604051610c8991906114e8565b60405180910390a250505050505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156107bf5783829060005260206000209060030201604051806060016040529081600082018054610cf4906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d20906117a6565b8015610d6d5780601f10610d4257610100808354040283529160200191610d6d565b820191906000526020600020905b815481529060010190602001808311610d5057829003601f168201915b50505050508152602001600182018054610d86906117a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610db2906117a6565b8015610dff5780601f10610dd457610100808354040283529160200191610dff565b820191906000526020600020905b815481529060010190602001808311610de257829003601f168201915b5050509183525050600291909101546001600160a01b03166020918201529082526001929092019101610cc1565b610e3961031c836102fb565b61038f5760405162461bcd60e51b8152600401610340906116a8565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610eae5760405162461bcd60e51b815260040161034090611661565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825183925015159050610f075760405162461bcd60e51b815260040161034090611661565b60006001600160a01b031660028888604051610f249291906114d8565b908152604051908190036020019020546001600160a01b031614610f5a5760405162461bcd60e51b815260040161034090611604565b60198610610f7a5760405162461bcd60e51b815260040161034090611705565b8460028888604051610f8d9291906114d8565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055610fc461123c565b89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815290899089908190840183828082843760009201829052506020808701959095526001600160a01b038b166040870152600180548082018255915285518051879660039093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601955061108f9450859350910190611266565b5060208281015180516110a89260018501920190611266565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055516110e090899089906114d8565b60405180910390207f8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c87604051610c8991906114e8565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b61113e8282610806565b610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055611175611130565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111c38282610806565b15610353576000828152602081815260408083206001600160a01b03851684529091529020805460ff191690556111f8611130565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6040518060600160405280606081526020016060815260200160006001600160a01b031681525090565b828054611272906117a6565b90600052602060002090601f01602090048101928261129457600085556112da565b82601f106112ad57805160ff19168380011785556112da565b828001600101855582156112da579182015b828111156112da5782518255916020019190600101906112bf565b506112e69291506112ea565b5090565b5b808211156112e657600081556001016112eb565b80356001600160a01b03811681146102c257600080fd5b60008083601f840112611327578182fd5b50813567ffffffffffffffff81111561133e578182fd5b60208301915083602082850101111561135657600080fd5b9250929050565b60006020828403121561136e578081fd5b5035919050565b60008060408385031215611387578081fd5b82359150611397602084016112ff565b90509250929050565b6000602082840312156113b1578081fd5b81356001600160e01b0319811681146113c8578182fd5b9392505050565b600080602083850312156113e1578182fd5b823567ffffffffffffffff8111156113f7578283fd5b61140385828601611316565b90969095509350505050565b600080600080600060608688031215611426578081fd5b853567ffffffffffffffff8082111561143d578283fd5b61144989838a01611316565b90975095506020880135915080821115611461578283fd5b5061146e88828901611316565b90945092506114819050604087016112ff565b90509295509295909350565b60008151808452815b818110156114b257602081850181015186830182015201611496565b818111156114c35782602083870101525b50601f01601f19169290920160200192915050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561158557603f198984030185528151606081518186526115468287018261148d565b915050888201518582038a87015261155e828261148d565b928901516001600160a01b0316958901959095525094870194925090860190600101611520565b509098975050505050505050565b901515815260200190565b90815260200190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f206772616e740000000000000000000000000000000000606082015260800190565b60208082526032908201527f4272696467654d616e616765723a20746f6b656e20616464726573732069732060408201527f616c726561647920726567697374657265640000000000000000000000000000606082015260800190565b60208082526027908201527f4272696467654d616e616765723a20746f6b656e4e616d652063616e277420626040820152666520656d70747960c81b606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201527f2061646d696e20746f207265766f6b6500000000000000000000000000000000606082015260800190565b60208082526024908201527f4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206040820152636c6f6e6760e01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201527f20726f6c657320666f722073656c660000000000000000000000000000000000606082015260800190565b6002810460018216806117ba57607f821691505b602082108114156117db57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220538161c5f8d8734a14544e7004f82505349ecb0f508690f281b10d57fc00e62a64736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8403:56",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:56",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:56"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:56"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:56",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:56"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:56"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:56",
                "type": ""
              }
            ],
            "src": "14:198:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:303:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "341:30:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "350:8:56"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "360:8:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "343:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "343:26:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "343:26:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "320:6:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "328:4:56",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "316:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "316:17:56"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "335:3:56"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "312:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "312:27:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "305:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:35:56"
                  },
                  "nodeType": "YulIf",
                  "src": "302:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "380:30:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "403:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "390:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:20:56"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "380:6:56"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:30:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "462:8:56"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "472:8:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "455:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:26:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "455:26:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "425:6:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:18:56",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "422:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "422:30:56"
                  },
                  "nodeType": "YulIf",
                  "src": "419:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "492:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "508:6:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "516:4:56",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "504:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "504:17:56"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "492:8:56"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "573:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "582:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "585:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "575:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "575:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "575:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "544:6:56"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "552:6:56"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "540:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "540:19:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "561:4:56",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "536:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:30:56"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "568:3:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "533:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:39:56"
                  },
                  "nodeType": "YulIf",
                  "src": "530:2:56"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "255:6:56",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "263:3:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "271:8:56",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "281:6:56",
                "type": ""
              }
            ],
            "src": "217:378:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:120:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "716:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "725:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "733:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "718:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "718:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "691:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "700:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "687:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "687:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "683:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "680:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "751:33:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "774:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "761:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "761:23:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "636:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "647:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "659:6:56",
                "type": ""
              }
            ],
            "src": "600:190:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "882:179:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "928:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "937:6:56"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "945:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "930:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "930:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "930:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "903:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "912:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "899:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "899:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "895:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "895:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "892:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "963:33:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "986:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "973:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:23:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "963:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1005:50:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1040:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1051:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1015:20:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:40:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1005:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "840:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "851:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "863:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "871:6:56",
                "type": ""
              }
            ],
            "src": "795:266:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1135:237:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1181:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1190:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1198:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1183:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1183:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1183:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1156:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1177:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1145:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1216:36:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1242:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1229:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:23:56"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1220:5:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1316:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1325:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1333:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1318:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1318:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1318:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1274:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1285:5:56"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1296:3:56",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1301:10:56",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1292:3:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1292:20:56"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1281:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:32:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1271:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:43:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1264:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:51:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1351:15:56",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1361:5:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1101:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1112:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1124:6:56",
                "type": ""
              }
            ],
            "src": "1066:306:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1467:343:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1513:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1522:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1530:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1515:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1515:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1515:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1488:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1497:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1480:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1477:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1548:37:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1575:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1562:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:23:56"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1552:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1628:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1637:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1645:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1630:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1630:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1630:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1600:6:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:18:56",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1597:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:30:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1594:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1663:87:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:56"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:22:56"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1742:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1689:28:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:61:56"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "1667:8:56",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1677:8:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1759:18:56",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "1769:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1759:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1786:18:56",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1796:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1786:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1425:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1436:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1448:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1456:6:56",
                "type": ""
              }
            ],
            "src": "1377:433:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1959:687:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2005:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2014:6:56"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2022:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2007:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2007:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2007:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1980:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1989:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1976:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1976:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2001:2:56",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1972:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1972:32:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1969:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2040:37:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2067:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2054:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2054:23:56"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2044:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2086:28:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2096:18:56",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2090:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2150:6:56"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2158:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2143:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2129:6:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2137:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2126:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:14:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2123:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2176:87:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2235:9:56"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2246:6:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2231:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:22:56"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2255:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2202:28:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:61:56"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "2180:8:56",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2190:8:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2272:18:56",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "2282:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2272:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2299:18:56",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2309:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2299:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2326:48:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2359:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2370:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2355:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2355:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2342:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:32:56"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2330:8:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2403:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2412:6:56"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2420:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2405:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2405:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2405:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2389:8:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2399:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2386:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:16:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2383:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2438:89:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2497:9:56"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2508:8:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2493:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2493:24:56"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2519:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2464:28:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:63:56"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2442:8:56",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "2452:8:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:18:56",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2546:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2563:18:56",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2573:8:56"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2563:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2590:50:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2636:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2621:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2621:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2600:20:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:40:56"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2590:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1893:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1904:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1916:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1924:6:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1932:6:56",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1940:6:56",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1948:6:56",
                "type": ""
              }
            ],
            "src": "1815:831:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2703:426:56",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2713:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2733:5:56"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2727:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2727:12:56"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2717:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2755:3:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2760:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2748:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:19:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:19:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2776:12:56",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2785:3:56"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2780:1:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2849:110:56",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2863:14:56",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2873:4:56",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2867:2:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2905:3:56"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2910:1:56"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2901:3:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2901:11:56"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2914:2:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2897:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2897:20:56"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2933:5:56"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2940:1:56"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2929:3:56"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2929:13:56"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2944:2:56"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2925:3:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2925:22:56"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2919:5:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2919:29:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2890:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2890:59:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2890:59:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2808:1:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2811:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2805:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:13:56"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2819:21:56",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2821:17:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2830:1:56"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2833:4:56",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2826:3:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2826:12:56"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2821:1:56"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2801:3:56",
                    "statements": []
                  },
                  "src": "2797:162:56"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2993:64:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:3:56"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3027:6:56"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3018:3:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3018:16:56"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3036:4:56",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3014:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3014:27:56"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3043:3:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3007:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3007:40:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3007:40:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2974:1:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2977:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2971:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:13:56"
                  },
                  "nodeType": "YulIf",
                  "src": "2968:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3066:57:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3081:3:56"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3094:6:56"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3102:2:56",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3090:3:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3090:15:56"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3111:2:56",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3107:3:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3107:7:56"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3086:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3086:29:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3077:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:39:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3118:4:56",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3073:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:50:56"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3066:3:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2680:5:56",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2687:3:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2695:3:56",
                "type": ""
              }
            ],
            "src": "2651:478:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:126:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3306:3:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3311:6:56"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3319:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3293:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3293:33:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3293:33:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3335:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:56"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3354:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3345:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:16:56"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3339:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3377:2:56"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3381:3:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3370:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:15:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3370:15:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3394:9:56",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "3401:2:56"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3394:3:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3251:3:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3256:6:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3264:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3275:3:56",
                "type": ""
              }
            ],
            "src": "3134:275:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3515:125:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3525:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3537:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3548:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3533:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3533:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3525:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3567:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3582:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:42:56",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3578:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3578:55:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:74:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:74:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3484:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3495:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3506:4:56",
                "type": ""
              }
            ],
            "src": "3414:226:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3858:1121:56",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3868:12:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3878:2:56",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3872:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3889:32:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3907:9:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3918:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3903:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3903:18:56"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3893:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3937:9:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3948:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3930:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3930:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3930:21:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3960:17:56",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3971:6:56"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3964:3:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3986:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4006:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4000:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4000:13:56"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3990:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4029:6:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4037:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4022:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:22:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:22:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4053:12:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4063:2:56",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4057:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4074:25:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4085:9:56"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4096:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4081:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4081:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4074:3:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4108:54:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4130:9:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4145:6:56"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4153:2:56"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "4141:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4141:15:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4126:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4126:31:56"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4159:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4122:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4122:40:56"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "4112:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4171:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4189:6:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4197:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4185:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4185:15:56"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4175:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4209:13:56",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4218:4:56"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4213:1:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4280:670:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4301:3:56"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4314:6:56"
                                    },
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4322:9:56"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4310:3:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4310:22:56"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4338:2:56",
                                      "type": "",
                                      "value": "63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "4334:3:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4334:7:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4306:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4306:36:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4294:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4294:49:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4294:49:56"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4356:23:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4372:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4366:5:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4366:13:56"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "4360:2:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4392:14:56",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4402:4:56",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "4396:2:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4419:29:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "4445:2:56"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4439:5:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4439:9:56"
                        },
                        "variables": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulTypedName",
                            "src": "4423:12:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "4468:6:56"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "4476:2:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4461:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4461:18:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4461:18:56"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4492:64:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4526:12:56"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4544:6:56"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4552:2:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4540:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4540:15:56"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string",
                            "nodeType": "YulIdentifier",
                            "src": "4506:19:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4506:50:56"
                        },
                        "variables": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulTypedName",
                            "src": "4496:6:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4569:40:56",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4601:2:56"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4605:2:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4597:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4597:11:56"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4591:5:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4591:18:56"
                        },
                        "variables": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulTypedName",
                            "src": "4573:14:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:6:56"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4641:2:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4629:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4629:15:56"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4650:6:56"
                                },
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4658:6:56"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4646:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4646:19:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4622:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4622:44:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4622:44:56"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4679:57:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "memberValue0_1",
                              "nodeType": "YulIdentifier",
                              "src": "4713:14:56"
                            },
                            {
                              "name": "tail_3",
                              "nodeType": "YulIdentifier",
                              "src": "4729:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string",
                            "nodeType": "YulIdentifier",
                            "src": "4693:19:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4693:43:56"
                        },
                        "variables": [
                          {
                            "name": "tail_4",
                            "nodeType": "YulTypedName",
                            "src": "4683:6:56",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "tail_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4760:6:56"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4768:2:56"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4756:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4756:15:56"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "4787:2:56"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "4791:2:56"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4783:3:56"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4783:11:56"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4777:5:56"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4777:18:56"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4797:42:56",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4773:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4773:67:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4749:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4749:92:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4749:92:56"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4854:16:56",
                        "value": {
                          "name": "tail_4",
                          "nodeType": "YulIdentifier",
                          "src": "4864:6:56"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "4854:6:56"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4883:25:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4897:6:56"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4905:2:56"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4893:3:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4893:15:56"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4883:6:56"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4921:19:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4932:3:56"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4937:2:56"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4928:3:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4928:12:56"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4921:3:56"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4242:1:56"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4245:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4239:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4239:13:56"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4253:18:56",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4255:14:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4264:1:56"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4267:1:56",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4260:3:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4260:9:56"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4255:1:56"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4235:3:56",
                    "statements": []
                  },
                  "src": "4231:719:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4959:14:56",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "4967:6:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4959:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3827:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3838:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3849:4:56",
                "type": ""
              }
            ],
            "src": "3645:1334:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5079:92:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5089:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5101:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5112:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5097:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5097:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5089:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5131:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5156:6:56"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5149:6:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5149:14:56"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5142:6:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:22:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5124:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5124:41:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5124:41:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5048:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5059:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5070:4:56",
                "type": ""
              }
            ],
            "src": "4984:187:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5277:76:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5287:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5299:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5295:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5287:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5329:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5340:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5322:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5322:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5322:25:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5246:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5257:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5268:4:56",
                "type": ""
              }
            ],
            "src": "5176:177:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5532:237:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5549:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5560:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5542:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5542:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5542:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5583:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5594:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5579:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5579:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5599:2:56",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5572:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5572:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5572:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5622:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5633:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5618:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5618:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5638:34:56",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5611:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5611:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5611:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5693:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5704:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5689:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5689:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5709:17:56",
                        "type": "",
                        "value": " admin to grant"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5682:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:45:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5682:45:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5736:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5748:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5759:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5744:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5736:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5509:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5523:4:56",
                "type": ""
              }
            ],
            "src": "5358:411:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5948:240:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5965:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5976:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5958:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5958:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5958:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5999:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6010:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5995:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5995:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6015:2:56",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6038:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6049:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6054:34:56",
                        "type": "",
                        "value": "BridgeManager: token address is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6027:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6109:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6120:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6105:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6105:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6125:20:56",
                        "type": "",
                        "value": "already registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6098:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6098:48:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6098:48:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6155:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6167:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6178:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6163:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6155:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5925:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5939:4:56",
                "type": ""
              }
            ],
            "src": "5774:414:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6367:229:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6384:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6377:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6377:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6418:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6429:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6414:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6414:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6434:2:56",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6407:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6407:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6407:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6457:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6468:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6453:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6453:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6473:34:56",
                        "type": "",
                        "value": "BridgeManager: tokenName can't b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6446:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6446:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6446:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6528:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6539:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6524:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6544:9:56",
                        "type": "",
                        "value": "e empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6517:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6517:37:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6517:37:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6563:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6575:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6586:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6571:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6571:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6563:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6344:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6358:4:56",
                "type": ""
              }
            ],
            "src": "6193:403:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6775:238:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6792:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6803:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6785:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6785:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6785:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6826:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6837:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6822:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6822:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6842:2:56",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6815:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6815:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6815:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6865:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6876:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6861:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6881:34:56",
                        "type": "",
                        "value": "AccessControl: sender must be an"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6854:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6854:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6854:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6936:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6947:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6932:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6932:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6952:18:56",
                        "type": "",
                        "value": " admin to revoke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:46:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:46:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6980:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6992:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7003:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6988:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6988:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6980:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6752:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6766:4:56",
                "type": ""
              }
            ],
            "src": "6601:412:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7192:226:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7209:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7220:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7202:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7202:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7202:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7243:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7254:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7239:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7239:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7259:2:56",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7232:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7232:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7232:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7282:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7293:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7278:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7278:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7298:34:56",
                        "type": "",
                        "value": "BridgeManager: token Symbol too "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7271:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7271:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7271:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7353:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7364:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7349:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7349:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7369:6:56",
                        "type": "",
                        "value": "long"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7342:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:34:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7342:34:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7385:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7397:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7408:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7393:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7393:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7385:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7169:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7183:4:56",
                "type": ""
              }
            ],
            "src": "7018:400:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7597:237:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7614:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7625:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7607:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7607:21:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7607:21:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7648:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7659:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7644:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7644:18:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7664:2:56",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7637:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7637:30:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7637:30:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7687:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7698:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7683:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7683:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7703:34:56",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7676:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7676:62:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7676:62:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7758:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7769:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7754:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:18:56"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7774:17:56",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7747:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7747:45:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7747:45:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7801:27:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7813:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7824:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7809:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7809:19:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7801:4:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7574:9:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7588:4:56",
                "type": ""
              }
            ],
            "src": "7423:411:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7940:76:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7950:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7962:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7973:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7958:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7958:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7950:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7992:9:56"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8003:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7985:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7985:25:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7985:25:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7909:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7920:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7931:4:56",
                "type": ""
              }
            ],
            "src": "7839:177:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8076:325:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8086:22:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8100:4:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8106:1:56",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8096:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:12:56"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8086:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8117:38:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "8147:4:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8153:1:56",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8143:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8143:12:56"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "8121:18:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8194:31:56",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8196:27:56",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "8210:6:56"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8218:4:56",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8206:3:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8206:17:56"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8196:6:56"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8174:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8167:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:26:56"
                  },
                  "nodeType": "YulIf",
                  "src": "8164:2:56"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8284:111:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8305:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8312:3:56",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8317:10:56",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8308:3:56"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8308:20:56"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8298:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8298:31:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8298:31:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8349:1:56",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8352:4:56",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8342:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8342:15:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8342:15:56"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8377:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8380:4:56",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8370:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8370:15:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8370:15:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "8240:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8263:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8271:2:56",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8260:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8260:14:56"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8237:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8237:38:56"
                  },
                  "nodeType": "YulIf",
                  "src": "8234:2:56"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8056:4:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8065:6:56",
                "type": ""
              }
            ],
            "src": "8021:380:56"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_t_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_t_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_t_address(add(headStart, 64))\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, end)\n        end := _1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, mul(length, _1)), _2)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            let _4 := 0x60\n            let memberValue0 := mload(_3)\n            mstore(tail_2, _4)\n            let tail_3 := abi_encode_t_string(memberValue0, add(tail_2, _4))\n            let memberValue0_1 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), sub(tail_3, tail_2))\n            let tail_4 := abi_encode_t_string(memberValue0_1, tail_3)\n            mstore(add(tail_2, _2), and(mload(add(_3, _2)), 0xffffffffffffffffffffffffffffffffffffffff))\n            tail_2 := tail_4\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to grant\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"BridgeManager: token address is \")\n        mstore(add(headStart, 96), \"already registered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"BridgeManager: tokenName can't b\")\n        mstore(add(headStart, 96), \"e empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"AccessControl: sender must be an\")\n        mstore(add(headStart, 96), \" admin to revoke\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BridgeManager: token Symbol too \")\n        mstore(add(headStart, 96), \"long\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "423:6906:0:-:0;;;1871:114;;;;;;;;;-1:-1:-1;1891:44:0;2408:4:34;1922:12:0;:10;:12::i;:::-;1891:10;:44::i;:::-;1941:39;507:26;1967:12;:10;:12::i;1941:39::-;423:6906;;586:96:50;665:10;586:96;:::o;6519:110:34:-;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6952:224::-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:34;;;;;;;;;:36;;-1:-1:-1;;7064:36:34;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:34;7137:7;-1:-1:-1;;;;;7119:40:34;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;3867:137::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:34;;;;;;;;;;;;;;;3867:137::o;423:6906:0:-;;;;;;;",
  "deployedSourceMap": "423:6906:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3165:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3566:214:34;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2058:184:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4185:121:34:-;;;;;;:::i;:::-;;:::i;4556:228::-;;;;;;:::i;:::-;;:::i;:::-;;5740:214;;;;;;:::i;:::-;;:::i;2519:105:0:-;;;:::i;6604:723::-;;;;;;:::i;:::-;;:::i;3347:182::-;;;;;;:::i;:::-;;:::i;2315:134::-;;;:::i;:::-;;;;;;;:::i;467:66::-;;;:::i;3814:109::-;;;:::i;2698:186::-;;;;;;:::i;:::-;;:::i;3867:137:34:-;;;;;;:::i;:::-;;:::i;2958:136:0:-;;;:::i;2363:49:34:-;;;:::i;5374:892:0:-;;;;;;:::i;:::-;;:::i;3604:138::-;;;:::i;5018:231:34:-;;;;;;:::i;:::-;;:::i;4276:760:0:-;;;;;;:::i;:::-;;:::i;3165:107::-;3239:21;:28;3165:107;:::o;3566:214:34:-;3651:4;-1:-1:-1;;;;;;3674:47:34;;-1:-1:-1;;;3674:47:34;;:99;;;3737:36;3761:11;3737:23;:36::i;:::-;3667:106;;3566:214;;;;:::o;2058:184:0:-;2157:21;2204:20;2225:11;;2204:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2204:33:0;;2058:184;-1:-1:-1;;;2058:184:0:o;4185:121:34:-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121::o;4556:228::-;4648:41;4656:18;4669:4;4656:12;:18::i;:::-;4676:12;:10;:12::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:34;;;;;;;:::i;:::-;;;;;;;;;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;5740:214::-;5846:12;:10;:12::i;:::-;-1:-1:-1;;;;;5835:23:34;:7;-1:-1:-1;;;;;5835:23:34;;5827:83;;;;-1:-1:-1;;;5827:83:34;;;;;;;:::i;:::-;5921:26;5933:4;5939:7;5921:11;:26::i;2519:105:0:-;2592:20;:27;2519:105;:::o;6604:723::-;6757:8;;1561:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1697:21:0;;1659:16;;-1:-1:-1;1697:26:0;;;-1:-1:-1;1682:96:0;;;;-1:-1:-1;;;1682:96:0;;;;;;;:::i;:::-;581:42:::1;-1:-1:-1::0;;;;;6788:48:0::1;:22;6811:8;;6788:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;6788:32:0::1;:48;6773:129;;;;-1:-1:-1::0;;;6773:129:0::1;;;;;;;:::i;:::-;6948:2;6923:27:::0;::::1;6908:94;;;;-1:-1:-1::0;;;6908:94:0::1;;;;;;;:::i;:::-;7043:20;7008:22;7031:8;;7008:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:55;;-1:-1:-1;;;;;7008:55:0;;;::::1;-1:-1:-1::0;;;;;;7008:55:0;;::::1;::::0;;;::::1;::::0;;7069:31:::1;;:::i;:::-;7122:9;;7106:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;7106:25:0;;;-1:-1:-1;7137:26:0::1;::::0;;::::1;7106:25;7137:26:::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;7155:8;;;;;;7137:26;::::1;7155:8:::0;;;;7137:26;::::1;;::::0;::::1;::::0;;;-1:-1:-1;7137:15:0::1;::::0;;::::1;:26:::0;;;;-1:-1:-1;;;;;7169:47:0;::::1;:24;::::0;::::1;:47:::0;7222:22:::1;:37:::0;;::::1;::::0;::::1;::::0;;;;;;;;7137:8;;7222:37:::1;::::0;;::::1;::::0;::::1;::::0;-1:-1:-1;7222:37:0::1;::::0;-1:-1:-1;7222:37:0;;-1:-1:-1;7222:37:0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7222:37:0::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7222:37:0::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;7222:37:0::1;-1:-1:-1::0;;;;;7222:37:0;;::::1;::::0;;;::::1;::::0;;7270:52;::::1;::::0;7291:8;;;;7270:52:::1;:::i;:::-;;;;;;;;;7301:20;7270:52;;;;;;:::i;:::-;;;;;;;;1784:1;6604:723:::0;;;;;;;:::o;3347:182::-;3445:21;3492:22;3515:8;;3492:32;;;;;;;:::i;2315:134::-;2383:24;2424:20;2417:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2417:27:0;;;-1:-1:-1;;2417:27:0;;;;;;-1:-1:-1;;;;;2417:27:0;;;;;;;;;;;;;;;;;;;;;;;;;2315:134;:::o;467:66::-;507:26;467:66;:::o;3814:109::-;3889:22;:29;3814:109;:::o;2698:186::-;2798:21;2845;2867:11;;2845:34;;;;;;;:::i;3867:137:34:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:34;;;;;;;;;;;;;;;3867:137::o;2958:136:0:-;3027:24;3068:21;3061:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3061:28:0;;;-1:-1:-1;;3061:28:0;;;;;;-1:-1:-1;;;;;3061:28:0;;;;;;;;;;;;;;;;;;2363:49:34;2408:4;2363:49;:::o;5374:892:0:-;5529:9;;1561:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1697:21:0;;1659:16;;-1:-1:-1;1697:26:0;;;-1:-1:-1;1682:96:0;;;;-1:-1:-1;;;1682:96:0;;;;;;;:::i;:::-;5555:11:::1;;1561:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;1697:21:0;;1659:16;;-1:-1:-1;1697:26:0;::::1;::::0;-1:-1:-1;1682:96:0::1;;;;-1:-1:-1::0;;;1682:96:0::1;;;;;;;:::i;:::-;581:42:::2;-1:-1:-1::0;;;;;5716:50:0::2;:21;5738:11;;5716:34;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;5716:34:0::2;:50;5701:131;;;;-1:-1:-1::0;;;5701:131:0::2;;;;;;;:::i;:::-;5881:2;5853:30:::0;::::2;5838:97;;;;-1:-1:-1::0;;;5838:97:0::2;;;;;;;:::i;:::-;5978:20;5941:21;5963:11;;5941:34;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:57;;-1:-1:-1;;;;;5941:57:0;;;::::2;-1:-1:-1::0;;;;;;5941:57:0;;::::2;::::0;;;::::2;::::0;;6004:31:::2;;:::i;:::-;6057:9;;6041:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;;6041:25:0;;;-1:-1:-1;6072:29:0::2;::::0;;::::2;6041:25;6072:29:::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;6090:11;;;;;;6072:29;::::2;6090:11:::0;;;;6072:29;::::2;;::::0;::::2;::::0;;;-1:-1:-1;6072:15:0::2;::::0;;::::2;:29:::0;;;;-1:-1:-1;;;;;6107:47:0;::::2;:24;::::0;::::2;:47:::0;6160:21:::2;:36:::0;;::::2;::::0;::::2;::::0;;;;;;;;;;6072:8;;6160:36;;;::::2;::::0;::::2;::::0;-1:-1:-1;6160:36:0::2;::::0;-1:-1:-1;6160:36:0;;-1:-1:-1;6160:36:0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;6160:36:0::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;6160:36:0::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;;;6160:36:0::2;-1:-1:-1::0;;;;;6160:36:0;;::::2;::::0;;;::::2;::::0;;6207:54;::::2;::::0;6227:11;;;;6207:54:::2;:::i;:::-;;;;;;;;;6240:20;6207:54;;;;;;:::i;:::-;;;;;;;;1784:1;::::1;;5374:892:::0;;;;;;;:::o;3604:138::-;3674:24;3715:22;3708:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3708:29:0;;;-1:-1:-1;;3708:29:0;;;;;;-1:-1:-1;;;;;3708:29:0;;;;;;;;;;;;;;;;;;5018:231:34;5111:41;5119:18;5132:4;5119:12;:18::i;5111:41::-;5103:102;;;;-1:-1:-1;;;5103:102:34;;;;;;;:::i;4276:760:0:-;4430:9;;1561:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1697:21:0;;1659:16;;-1:-1:-1;1697:26:0;;;-1:-1:-1;1682:96:0;;;;-1:-1:-1;;;1682:96:0;;;;;;;:::i;:::-;4456:11:::1;;1561:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;1697:21:0;;1659:16;;-1:-1:-1;1697:26:0;::::1;::::0;-1:-1:-1;1682:96:0::1;;;;-1:-1:-1::0;;;1682:96:0::1;;;;;;;:::i;:::-;581:42:::2;-1:-1:-1::0;;;;;4490:49:0::2;:20;4511:11;;4490:33;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;4490:33:0::2;:49;4475:130;;;;-1:-1:-1::0;;;4475:130:0::2;;;;;;;:::i;:::-;4654:2;4626:30:::0;::::2;4611:97;;;;-1:-1:-1::0;;;4611:97:0::2;;;;;;;:::i;:::-;4750:20;4714;4735:11;;4714:33;;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;:56;;-1:-1:-1;;;;;4714:56:0;;;::::2;-1:-1:-1::0;;;;;;4714:56:0;;::::2;::::0;;;::::2;::::0;;4776:31:::2;;:::i;:::-;4829:9;;4813:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;;4813:25:0;;;-1:-1:-1;4844:29:0::2;::::0;;::::2;4813:25;4844:29:::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;4862:11;;;;;;4844:29;::::2;4862:11:::0;;;;4844:29;::::2;;::::0;::::2;::::0;;;-1:-1:-1;4844:15:0::2;::::0;;::::2;:29:::0;;;;-1:-1:-1;;;;;4879:47:0;::::2;:24;::::0;::::2;:47:::0;4932:20:::2;:35:::0;;;;::::2;::::0;;;;;;;;4844:8;;4932:35:::2;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;4932:35:0::2;::::0;-1:-1:-1;4932:35:0;;-1:-1:-1;4932:35:0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;4932:35:0::2;::::0;;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;4932:35:0::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;;;4932:35:0::2;-1:-1:-1::0;;;;;4932:35:0;;::::2;::::0;;;::::2;::::0;;4978:53;::::2;::::0;4997:11;;;;4978:53:::2;:::i;:::-;;;;;;;;;5010:20;4978:53;;;;;;:::i;763:155:53:-:0;-1:-1:-1;;;;;;871:40:53;;-1:-1:-1;;;871:40:53;763:155;;;:::o;586:96:50:-;665:10;586:96;:::o;6952:224:34:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:34;;;;;;;;;:36;;-1:-1:-1;;7064:36:34;7096:4;7064:36;;;7146:12;:10;:12::i;:::-;-1:-1:-1;;;;;7119:40:34;7137:7;-1:-1:-1;;;;;7119:40:34;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:34;;;;;;;;;:37;;-1:-1:-1;;7294:37:34;;;7377:12;:10;:12::i;:::-;-1:-1:-1;;;;;7350:40:34;7368:7;-1:-1:-1;;;;;7350:40:34;7362:4;7350:40;;;;;;;;;;7182:225;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:198:56;84:20;;-1:-1:-1;;;;;133:54:56;;123:65;;113:2;;202:1;199;192:12;217:378;;;335:3;328:4;320:6;316:17;312:27;302:2;;360:8;350;343:26;302:2;-1:-1:-1;390:20:56;;433:18;422:30;;419:2;;;472:8;462;455:26;419:2;516:4;508:6;504:17;492:29;;568:3;561:4;552:6;544;540:19;536:30;533:39;530:2;;;585:1;582;575:12;530:2;292:303;;;;;:::o;600:190::-;;712:2;700:9;691:7;687:23;683:32;680:2;;;733:6;725;718:22;680:2;-1:-1:-1;761:23:56;;670:120;-1:-1:-1;670:120:56:o;795:266::-;;;924:2;912:9;903:7;899:23;895:32;892:2;;;945:6;937;930:22;892:2;986:9;973:23;963:33;;1015:40;1051:2;1040:9;1036:18;1015:40;:::i;:::-;1005:50;;882:179;;;;;:::o;1066:306::-;;1177:2;1165:9;1156:7;1152:23;1148:32;1145:2;;;1198:6;1190;1183:22;1145:2;1229:23;;-1:-1:-1;;;;;;1281:32:56;;1271:43;;1261:2;;1333:6;1325;1318:22;1261:2;1361:5;1135:237;-1:-1:-1;;;1135:237:56:o;1377:433::-;;;1509:2;1497:9;1488:7;1484:23;1480:32;1477:2;;;1530:6;1522;1515:22;1477:2;1575:9;1562:23;1608:18;1600:6;1597:30;1594:2;;;1645:6;1637;1630:22;1594:2;1689:61;1742:7;1733:6;1722:9;1718:22;1689:61;:::i;:::-;1769:8;;1663:87;;-1:-1:-1;1467:343:56;-1:-1:-1;;;;1467:343:56:o;1815:831::-;;;;;;2001:2;1989:9;1980:7;1976:23;1972:32;1969:2;;;2022:6;2014;2007:22;1969:2;2067:9;2054:23;2096:18;2137:2;2129:6;2126:14;2123:2;;;2158:6;2150;2143:22;2123:2;2202:61;2255:7;2246:6;2235:9;2231:22;2202:61;:::i;:::-;2282:8;;-1:-1:-1;2176:87:56;-1:-1:-1;2370:2:56;2355:18;;2342:32;;-1:-1:-1;2386:16:56;;;2383:2;;;2420:6;2412;2405:22;2383:2;;2464:63;2519:7;2508:8;2497:9;2493:24;2464:63;:::i;:::-;2546:8;;-1:-1:-1;2438:89:56;-1:-1:-1;2600:40:56;;-1:-1:-1;2636:2:56;2621:18;;2600:40;:::i;:::-;2590:50;;1959:687;;;;;;;;:::o;2651:478::-;;2733:5;2727:12;2760:6;2755:3;2748:19;2785:3;2797:162;2811:6;2808:1;2805:13;2797:162;;;2873:4;2929:13;;;2925:22;;2919:29;2901:11;;;2897:20;;2890:59;2826:12;2797:162;;;2977:6;2974:1;2971:13;2968:2;;;3043:3;3036:4;3027:6;3022:3;3018:16;3014:27;3007:40;2968:2;-1:-1:-1;3111:2:56;3090:15;-1:-1:-1;;3086:29:56;3077:39;;;;3118:4;3073:50;;2703:426;-1:-1:-1;;2703:426:56:o;3134:275::-;;3319:6;3311;3306:3;3293:33;3345:16;;3370:15;;;3345:16;3283:126;-1:-1:-1;3283:126:56:o;3414:226::-;-1:-1:-1;;;;;3578:55:56;;;;3560:74;;3548:2;3533:18;;3515:125::o;3645:1334::-;3878:2;3930:21;;;4000:13;;3903:18;;;4022:22;;;3645:1334;;3878:2;4063;;4081:18;;;;4141:15;;;4126:31;;4122:40;;4185:15;;;3645:1334;4231:719;4245:6;4242:1;4239:13;4231:719;;;4338:2;4334:7;4322:9;4314:6;4310:22;4306:36;4301:3;4294:49;4372:6;4366:13;4402:4;4445:2;4439:9;4476:2;4468:6;4461:18;4506:50;4552:2;4544:6;4540:15;4526:12;4506:50;:::i;:::-;4492:64;;;4605:2;4601;4597:11;4591:18;4658:6;4650;4646:19;4641:2;4633:6;4629:15;4622:44;4693:43;4729:6;4713:14;4693:43;:::i;:::-;4783:11;;;4777:18;-1:-1:-1;;;;;4773:67:56;4756:15;;;4749:92;;;;-1:-1:-1;4928:12:56;;;;4679:57;-1:-1:-1;4893:15:56;;;;4267:1;4260:9;4231:719;;;-1:-1:-1;4967:6:56;;3858:1121;-1:-1:-1;;;;;;;;3858:1121:56:o;4984:187::-;5149:14;;5142:22;5124:41;;5112:2;5097:18;;5079:92::o;5176:177::-;5322:25;;;5310:2;5295:18;;5277:76::o;5358:411::-;5560:2;5542:21;;;5599:2;5579:18;;;5572:30;5638:34;5633:2;5618:18;;5611:62;5709:17;5704:2;5689:18;;5682:45;5759:3;5744:19;;5532:237::o;5774:414::-;5976:2;5958:21;;;6015:2;5995:18;;;5988:30;6054:34;6049:2;6034:18;;6027:62;6125:20;6120:2;6105:18;;6098:48;6178:3;6163:19;;5948:240::o;6193:403::-;6395:2;6377:21;;;6434:2;6414:18;;;6407:30;6473:34;6468:2;6453:18;;6446:62;-1:-1:-1;;;6539:2:56;6524:18;;6517:37;6586:3;6571:19;;6367:229::o;6601:412::-;6803:2;6785:21;;;6842:2;6822:18;;;6815:30;6881:34;6876:2;6861:18;;6854:62;6952:18;6947:2;6932:18;;6925:46;7003:3;6988:19;;6775:238::o;7018:400::-;7220:2;7202:21;;;7259:2;7239:18;;;7232:30;7298:34;7293:2;7278:18;;7271:62;-1:-1:-1;;;7364:2:56;7349:18;;7342:34;7408:3;7393:19;;7192:226::o;7423:411::-;7625:2;7607:21;;;7664:2;7644:18;;;7637:30;7703:34;7698:2;7683:18;;7676:62;7774:17;7769:2;7754:18;;7747:45;7824:3;7809:19;;7597:237::o;8021:380::-;8106:1;8096:12;;8153:1;8143:12;;;8164:2;;8218:4;8210:6;8206:17;8196:27;;8164:2;8271;8263:6;8260:14;8240:18;8237:38;8234:2;;;8317:10;8312:3;8308:20;8305:1;8298:31;8352:4;8349:1;8342:15;8380:4;8377:1;8370:15;8234:2;;8076:325;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\n/// @author The PRIVI Blockchain team\n/// @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform\n\ncontract BridgeManager is AccessControl {\n  bytes32 public constant REGISTER_ROLE = keccak256(\"REGISTER_ROLE\");\n  address private constant ZERO_ADDRESS =\n    0x0000000000000000000000000000000000000000;\n\n  struct registeredToken {\n    string name;\n    string symbol;\n    address deployedAddress;\n  }\n\n  registeredToken[] private erc20RegisteredArray;\n  mapping(string => address) private contractAddressERC20;\n\n  registeredToken[] private erc721RegisteredArray;\n  mapping(string => address) private contractAddressERC721;\n\n  registeredToken[] private erc1155RegisteredArray;\n  mapping(string => address) private contractAddressERC1155;\n\n  event RegisterERC20Token(string indexed name, address tokenAddress);\n  event UnRegisterERC20Token(string indexed name);\n  event RegisterERC721Token(string indexed name, address tokenAddress);\n  event UnRegisterERC721Token(string indexed name);\n  event RegisterERC1155Token(string indexed name, address tokenAddress);\n  event UnRegisterERC1155Token(string indexed name);\n\n  /**\n   * @notice  Modifier to require 'tokenName' is not empty\n   * @param   tokenNameToCheck Token name to be checked\n   */\n  modifier nameIsNotEmpty(string memory tokenNameToCheck) {\n    bytes memory bytesTokenName = bytes(tokenNameToCheck);\n    require(\n      bytesTokenName.length != 0,\n      \"BridgeManager: tokenName can't be empty\"\n    );\n    _;\n  }\n\n  /**\n   * @notice Constructor to assign all roles to contract creator\n   */\n  constructor() {\n    _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    _setupRole(REGISTER_ROLE, _msgSender());\n  }\n\n  /**\n   * @notice get an address of a registered erc20 tokens\n   */\n  function getErc20AddressRegistered(string calldata tokenSymbol)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC20[tokenSymbol];\n  }\n\n  /**\n   * @notice get an array of all registered erc20 tokens\n   */\n  function getAllErc20Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc20RegisteredArray;\n  }\n\n  /**\n   * @notice get count of all registered erc20 tokens\n   */\n  function getAllErc20Count() external view returns (uint256) {\n    return erc20RegisteredArray.length;\n  }\n\n  /**\n   * @notice get an address of a registered erc721 tokens\n   */\n  function getErc721AddressRegistered(string calldata tokenSymbol)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC721[tokenSymbol];\n  }\n\n  /**\n   * @notice get an array of all registered erc721 tokens\n   */\n  function getAllErc721Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc721RegisteredArray;\n  }\n\n  /**\n   * @notice get count of all registered erc721 tokens\n   */\n  function getAllErc721Count() external view returns (uint256) {\n    return erc721RegisteredArray.length;\n  }\n\n  /**\n   * @notice get an address of a registered erc1155 tokens\n   */\n  function getErc1155AddressRegistered(string calldata tokenURI)\n    external\n    view\n    returns (address returnAddress)\n  {\n    returnAddress = contractAddressERC1155[tokenURI];\n  }\n\n  /**\n   * @notice get an array of all registered erc1155 tokens\n   */\n  function getAllErc1155Registered()\n    external\n    view\n    returns (registeredToken[] memory)\n  {\n    return erc1155RegisteredArray;\n  }\n\n  /**\n   * @notice get count of all registered erc1155 tokens\n   */\n  function getAllErc1155Count() external view returns (uint256) {\n    return erc1155RegisteredArray.length;\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC20 Token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name can't be higher than 25\n   * @param   tokenName Name of the token to be registered (e.g.: DAI, UNI)\n   * @param   tokenContractAddress Contract address of the ERC20 Token\n   */\n  function registerTokenERC20(\n    string calldata tokenName,\n    string calldata tokenSymbol,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenName) nameIsNotEmpty(tokenSymbol) {\n    require(\n      contractAddressERC20[tokenSymbol] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\"\n    );\n    require(\n      bytes(tokenSymbol).length < 25,\n      \"BridgeManager: token Symbol too long\"\n    );\n    contractAddressERC20[tokenSymbol] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenSymbol;\n    regToken.deployedAddress = tokenContractAddress;\n    erc20RegisteredArray.push(regToken);\n    emit RegisterERC20Token(tokenSymbol, tokenContractAddress);\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC721 Token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name can't be higher than 25\n   * @param   tokenName Name of the token to be registered\n   * @param   tokenContractAddress Contract address of the ERC721 Token\n   */\n  function registerTokenERC721(\n    string calldata tokenName,\n    string calldata tokenSymbol,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenName) nameIsNotEmpty(tokenSymbol) {\n    // require(hasRole(REGISTER_ROLE, _msgSender()),\n    //     \"BridgeManager: must have REGISTER_ROLE to register a token\");\n    require(\n      contractAddressERC721[tokenSymbol] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\"\n    );\n    require(\n      bytes(tokenSymbol).length < 25,\n      \"BridgeManager: token Symbol too long\"\n    );\n    contractAddressERC721[tokenSymbol] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenSymbol;\n    regToken.deployedAddress = tokenContractAddress;\n    erc721RegisteredArray.push(regToken);\n    emit RegisterERC721Token(tokenSymbol, tokenContractAddress);\n  }\n\n  /**\n   * @notice  Register the contract address of an ERC1155 Token\n   * @dev     - Token name and address can't be already registered\n   *          - Length of token name can't be higher than 25\n   * @param   tokenURI URI of the token to be registered\n   * @param   tokenContractAddress Contract address of the ERC1155 Token\n   */\n  function registerTokenERC1155(\n    string calldata tokenName,\n    string calldata tokenURI,\n    address tokenContractAddress\n  ) external nameIsNotEmpty(tokenURI) {\n    require(\n      contractAddressERC1155[tokenURI] == ZERO_ADDRESS,\n      \"BridgeManager: token address is already registered\"\n    );\n    require(\n      bytes(tokenURI).length < 25,\n      \"BridgeManager: token Symbol too long\"\n    );\n    contractAddressERC1155[tokenURI] = tokenContractAddress;\n    registeredToken memory regToken;\n    regToken.name = tokenName;\n    regToken.symbol = tokenURI;\n    regToken.deployedAddress = tokenContractAddress;\n    erc1155RegisteredArray.push(regToken);\n    emit RegisterERC1155Token(tokenURI, tokenContractAddress);\n  }\n}\n",
  "sourcePath": "/home/rekard0/Documents/WORK/PriviEthereum/PRIVIethereum/contracts/BridgeManager.sol",
  "ast": {
    "absolutePath": "/home/rekard0/Documents/WORK/PriviEthereum/PRIVIethereum/contracts/BridgeManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        5846
      ],
      "BridgeManager": [
        450
      ],
      "Context": [
        9128
      ],
      "ERC165": [
        9416
      ],
      "IAccessControl": [
        5566
      ],
      "IERC165": [
        9428
      ],
      "IERC20": [
        7705
      ],
      "IERC721": [
        8703
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 5847,
        "src": "91:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 7706,
        "src": "150:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 8704,
        "src": "207:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5846,
              "src": "449:13:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "449:13:0"
          }
        ],
        "contractDependencies": [
          5566,
          5846,
          9128,
          9416,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "267:155:0",
          "text": "@author The PRIVI Blockchain team\n @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform"
        },
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          5846,
          9416,
          9428,
          5566,
          9128
        ],
        "name": "BridgeManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "74f53317",
            "id": 13,
            "mutability": "constant",
            "name": "REGISTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "467:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "467:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454749535445525f524f4c45",
                  "id": 11,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "517:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  },
                  "value": "REGISTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  }
                ],
                "id": 10,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "507:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "507:26:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 16,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "537:86:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "BridgeManager.registeredToken",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "657:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "674:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "deployedAddress",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "693:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "registeredToken",
            "nodeType": "StructDefinition",
            "scope": 450,
            "src": "628:93:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "erc20RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "725:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "725:15:0"
                },
                "referencedDeclaration": 23,
                "src": "725:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "725:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "contractAddressERC20",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "775:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "783:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "775:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "erc721RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "835:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "835:15:0"
                },
                "referencedDeclaration": 23,
                "src": "835:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "835:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "contractAddressERC721",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "886:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "894:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "886:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "erc1155RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "947:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 41,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "947:15:0"
                },
                "referencedDeclaration": 23,
                "src": "947:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 42,
              "nodeType": "ArrayTypeName",
              "src": "947:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "contractAddressERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "999:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1007:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "999:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1017:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "RegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1086:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1107:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:43:0"
            },
            "src": "1061:68:0"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "UnRegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1159:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:21:0"
            },
            "src": "1132:48:0"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "RegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1209:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1230:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:43:0"
            },
            "src": "1183:69:0"
          },
          {
            "anonymous": false,
            "id": 67,
            "name": "UnRegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1283:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:21:0"
            },
            "src": "1255:49:0"
          },
          {
            "anonymous": false,
            "id": 73,
            "name": "RegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1334:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1355:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:43:0"
            },
            "src": "1307:70:0"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "UnRegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1409:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:21:0"
            },
            "src": "1380:50:0"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1617:173:0",
              "statements": [
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "bytesTokenName",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "1623:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "tokenNameToCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1659:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1653:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 84,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1653:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1623:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 90,
                            "name": "bytesTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1697:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1697:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1722:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1697:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e4e616d652063616e277420626520656d707479",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03",
                          "typeString": "literal_string \"BridgeManager: tokenName can't be empty\""
                        },
                        "value": "BridgeManager: tokenName can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03",
                          "typeString": "literal_string \"BridgeManager: tokenName can't be empty\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1682:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:96:0"
                },
                {
                  "id": 97,
                  "nodeType": "PlaceholderStatement",
                  "src": "1784:1:0"
                }
              ]
            },
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "1434:124:0",
              "text": " @notice  Modifier to require 'tokenName' is not empty\n @param   tokenNameToCheck Token name to be checked"
            },
            "id": 99,
            "name": "nameIsNotEmpty",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "tokenNameToCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1585:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:32:0"
            },
            "src": "1561:229:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1885:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5588,
                        "src": "1902:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 105,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9116,
                          "src": "1922:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1922:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5760,
                      "src": "1891:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "REGISTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1952:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 111,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9116,
                          "src": "1967:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1967:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 109,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5760,
                      "src": "1941:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:39:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1794:74:0",
              "text": " @notice Constructor to assign all roles to contract creator"
            },
            "id": 116,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:0:0"
            },
            "scope": 450,
            "src": "1871:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "2182:60:0",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "2188:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 125,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2204:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 127,
                      "indexExpression": {
                        "id": 126,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2225:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2204:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2188:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:49:0"
                }
              ]
            },
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1989:66:0",
              "text": " @notice get an address of a registered erc20 tokens"
            },
            "functionSelector": "10a43eba",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2093:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:29:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2157:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:23:0"
            },
            "scope": 450,
            "src": "2058:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2411:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "erc20RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "2424:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "2417:27:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "2246:66:0",
              "text": " @notice get an array of all registered erc20 tokens"
            },
            "functionSelector": "53206452",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2383:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 134,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "2383:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "2383:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "2383:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2382:26:0"
            },
            "scope": 450,
            "src": "2315:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2579:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 148,
                      "name": "erc20RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2592:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2592:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 147,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "2585:34:0"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "2453:63:0",
              "text": " @notice get count of all registered erc20 tokens"
            },
            "functionSelector": "455686c3",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:2:0"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2570:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:9:0"
            },
            "scope": 450,
            "src": "2519:105:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2823:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2829:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2845:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2867:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2845:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2829:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:50:0"
                }
              ]
            },
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "2628:67:0",
              "text": " @notice get an address of a registered erc721 tokens"
            },
            "functionSelector": "91567da8",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc721AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2734:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:29:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2798:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2797:23:0"
            },
            "scope": 450,
            "src": "2698:186:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "3055:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 175,
                    "name": "erc721RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "3068:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "3061:28:0"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "2888:67:0",
              "text": " @notice get an array of all registered erc721 tokens"
            },
            "functionSelector": "9f45c1d3",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2989:2:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3027:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 171,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 170,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "3027:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "3027:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 172,
                    "nodeType": "ArrayTypeName",
                    "src": "3027:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:26:0"
            },
            "scope": 450,
            "src": "2958:136:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3226:46:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 184,
                      "name": "erc721RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3239:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3239:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "3232:35:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "3098:64:0",
              "text": " @notice get count of all registered erc721 tokens"
            },
            "functionSelector": "01ab669c",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3191:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3217:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3216:9:0"
            },
            "scope": 450,
            "src": "3165:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "3470:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "3476:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 197,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "3492:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 199,
                      "indexExpression": {
                        "id": 198,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3515:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3492:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3476:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:48:0"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "3276:68:0",
              "text": " @notice get an address of a registered erc1155 tokens"
            },
            "functionSelector": "4dd1b5f8",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc1155AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3384:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:26:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3445:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3445:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3444:23:0"
            },
            "scope": 450,
            "src": "3347:182:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "3702:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 211,
                    "name": "erc1155RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "3715:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 210,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "3708:29:0"
                }
              ]
            },
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "3533:68:0",
              "text": " @notice get an array of all registered erc1155 tokens"
            },
            "functionSelector": "c7092a82",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3636:2:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3674:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 206,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "3674:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "3674:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "3674:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3673:26:0"
            },
            "scope": 450,
            "src": "3604:138:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3876:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 220,
                      "name": "erc1155RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "3889:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3889:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "3882:36:0"
                }
              ]
            },
            "documentation": {
              "id": 215,
              "nodeType": "StructuredDocumentation",
              "src": "3746:65:0",
              "text": " @notice get count of all registered erc1155 tokens"
            },
            "functionSelector": "90344f62",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3841:2:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3867:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3866:9:0"
            },
            "scope": 450,
            "src": "3814:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4469:567:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "contractAddressERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "4490:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4511:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4490:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 244,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "4527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4490:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4547:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4475:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4475:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 252,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "4632:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4626:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 250,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4626:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4626:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4626:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4654:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "4626:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4664:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:97:0"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 260,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "4714:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 261,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4735:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4714:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 263,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4750:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4714:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4714:56:0"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4776:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 267,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 266,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "4776:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "4776:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4776:31:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 270,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4813:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "4813:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 273,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4829:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4813:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:25:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 276,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4844:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4844:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 279,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4862:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4844:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:29:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 282,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4879:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "4879:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 285,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4906:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4879:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4958:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 288,
                        "name": "erc20RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4932:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4932:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 295,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4997:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 296,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "5010:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 294,
                      "name": "RegisterERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4978:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "4973:58:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3927:346:0",
              "text": " @notice  Register the contract address of an ERC20 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenName Name of the token to be registered (e.g.: DAI, UNI)\n @param   tokenContractAddress Contract address of the ERC20 Token"
            },
            "functionSelector": "dd2c859c",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 234,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 227,
                    "src": "4430:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "id": 233,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "4415:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4415:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 237,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "4456:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 238,
                "modifierName": {
                  "id": 236,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "4441:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4441:27:0"
              }
            ],
            "name": "registerTokenERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4309:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4340:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4373:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:102:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4469:0:0"
            },
            "scope": 450,
            "src": "4276:760:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "5568:698:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 317,
                            "name": "contractAddressERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "5716:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 319,
                          "indexExpression": {
                            "id": 318,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "5738:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5716:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 320,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "5754:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5716:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5774:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5701:131:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "5701:131:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 328,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "5859:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5853:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 326,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5853:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5853:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5853:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5881:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "5853:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5891:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5838:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5838:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "5838:97:0"
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 336,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5941:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "id": 337,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "5963:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5941:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "5978:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5941:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:57:0"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "6004:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 343,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 342,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "6004:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "6004:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6004:31:0"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 346,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6041:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "6041:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 349,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "6057:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6041:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "6041:25:0"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 352,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6072:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "6072:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 355,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "6090:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6072:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:29:0"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 358,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6107:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "6107:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "6134:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6107:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6187:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 364,
                        "name": "erc721RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "6160:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6160:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 371,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "6227:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 372,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "6240:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 370,
                      "name": "RegisterERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6207:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6207:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "EmitStatement",
                  "src": "6202:59:0"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5040:331:0",
              "text": " @notice  Register the contract address of an ERC721 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenName Name of the token to be registered\n @param   tokenContractAddress Contract address of the ERC721 Token"
            },
            "functionSelector": "c082713b",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 310,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "5529:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 311,
                "modifierName": {
                  "id": 309,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "5514:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5514:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 313,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 305,
                    "src": "5555:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 314,
                "modifierName": {
                  "id": 312,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "5540:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:27:0"
              }
            ],
            "name": "registerTokenERC721",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5408:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5408:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5439:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5439:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5472:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5402:102:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5568:0:0"
            },
            "scope": 450,
            "src": "5374:892:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "6767:560:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 390,
                            "name": "contractAddressERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "6788:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "id": 391,
                            "name": "tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "6811:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6788:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 393,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "6824:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6788:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6844:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6773:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 401,
                                "name": "tokenURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "6929:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6923:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 399,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6923:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6923:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6923:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6948:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "6923:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6958:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6908:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6908:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "6908:94:0"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 409,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "7008:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 411,
                      "indexExpression": {
                        "id": 410,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7031:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7008:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 412,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "7043:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7008:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:55:0"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "7069:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 416,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 415,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "7069:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "7069:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7069:31:0"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 419,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7106:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "7106:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 422,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "7122:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7106:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "7106:25:0"
                },
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 425,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7137:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "7137:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 428,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "7155:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7137:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:26:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7169:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "7169:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "7196:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7169:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7250:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 437,
                        "name": "erc1155RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "7222:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7222:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 444,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7291:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 445,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "7301:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 443,
                      "name": "RegisterERC1155Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7270:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "EmitStatement",
                  "src": "7265:57:0"
                }
              ]
            },
            "documentation": {
              "id": 377,
              "nodeType": "StructuredDocumentation",
              "src": "6270:331:0",
              "text": " @notice  Register the contract address of an ERC1155 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenURI URI of the token to be registered\n @param   tokenContractAddress Contract address of the ERC1155 Token"
            },
            "functionSelector": "4d4825a0",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 386,
                    "name": "tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "6757:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 387,
                "modifierName": {
                  "id": 385,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "6742:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6742:24:0"
              }
            ],
            "name": "registerTokenERC1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6639:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6670:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6670:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6700:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6633:99:0"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6767:0:0"
            },
            "scope": 450,
            "src": "6604:723:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 451,
        "src": "423:6906:0"
      }
    ],
    "src": "32:7298:0"
  },
  "legacyAST": {
    "absolutePath": "/home/rekard0/Documents/WORK/PriviEthereum/PRIVIethereum/contracts/BridgeManager.sol",
    "exportedSymbols": {
      "AccessControl": [
        5846
      ],
      "BridgeManager": [
        450
      ],
      "Context": [
        9128
      ],
      "ERC165": [
        9416
      ],
      "IAccessControl": [
        5566
      ],
      "IERC165": [
        9428
      ],
      "IERC20": [
        7705
      ],
      "IERC721": [
        8703
      ]
    },
    "id": 451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 5847,
        "src": "91:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 7706,
        "src": "150:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 451,
        "sourceUnit": 8704,
        "src": "207:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5846,
              "src": "449:13:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "449:13:0"
          }
        ],
        "contractDependencies": [
          5566,
          5846,
          9128,
          9416,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "267:155:0",
          "text": "@author The PRIVI Blockchain team\n @title Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform"
        },
        "fullyImplemented": true,
        "id": 450,
        "linearizedBaseContracts": [
          450,
          5846,
          9416,
          9428,
          5566,
          9128
        ],
        "name": "BridgeManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "74f53317",
            "id": 13,
            "mutability": "constant",
            "name": "REGISTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "467:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "467:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "52454749535445525f524f4c45",
                  "id": 11,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "517:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  },
                  "value": "REGISTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1f21ec03a6eb050fba156f5316dad461735df521fb446dd42c5a4728e9c70fe",
                    "typeString": "literal_string \"REGISTER_ROLE\""
                  }
                ],
                "id": 10,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "507:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "507:26:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 16,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "537:86:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000000000000"
            },
            "visibility": "private"
          },
          {
            "canonicalName": "BridgeManager.registeredToken",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "657:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "674:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "deployedAddress",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "693:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "registeredToken",
            "nodeType": "StructDefinition",
            "scope": 450,
            "src": "628:93:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "erc20RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "725:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "725:15:0"
                },
                "referencedDeclaration": 23,
                "src": "725:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "725:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "contractAddressERC20",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "775:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "783:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "775:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "erc721RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "835:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "835:15:0"
                },
                "referencedDeclaration": 23,
                "src": "835:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "835:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "contractAddressERC721",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "886:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "894:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "886:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "erc1155RegisteredArray",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "947:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
              "typeString": "struct BridgeManager.registeredToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 41,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40,
                  "name": "registeredToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23,
                  "src": "947:15:0"
                },
                "referencedDeclaration": 23,
                "src": "947:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                  "typeString": "struct BridgeManager.registeredToken"
                }
              },
              "id": 42,
              "nodeType": "ArrayTypeName",
              "src": "947:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                "typeString": "struct BridgeManager.registeredToken[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "contractAddressERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 450,
            "src": "999:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1007:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "999:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1017:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "RegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1086:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1107:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:43:0"
            },
            "src": "1061:68:0"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "UnRegisterERC20Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1159:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:21:0"
            },
            "src": "1132:48:0"
          },
          {
            "anonymous": false,
            "id": 63,
            "name": "RegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1209:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "1230:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:43:0"
            },
            "src": "1183:69:0"
          },
          {
            "anonymous": false,
            "id": 67,
            "name": "UnRegisterERC721Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "1283:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:21:0"
            },
            "src": "1255:49:0"
          },
          {
            "anonymous": false,
            "id": 73,
            "name": "RegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1334:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1355:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:43:0"
            },
            "src": "1307:70:0"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "UnRegisterERC1155Token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1409:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:21:0"
            },
            "src": "1380:50:0"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1617:173:0",
              "statements": [
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "bytesTokenName",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "1623:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 82,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "tokenNameToCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1659:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1653:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 84,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1653:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1623:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 90,
                            "name": "bytesTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1697:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1697:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1722:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1697:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e4e616d652063616e277420626520656d707479",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03",
                          "typeString": "literal_string \"BridgeManager: tokenName can't be empty\""
                        },
                        "value": "BridgeManager: tokenName can't be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c726127132ec05b38dc39c4bf6f6fdfbc48e695d86ff5e8e1064a7bfc248d03",
                          "typeString": "literal_string \"BridgeManager: tokenName can't be empty\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1682:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:96:0"
                },
                {
                  "id": 97,
                  "nodeType": "PlaceholderStatement",
                  "src": "1784:1:0"
                }
              ]
            },
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "1434:124:0",
              "text": " @notice  Modifier to require 'tokenName' is not empty\n @param   tokenNameToCheck Token name to be checked"
            },
            "id": 99,
            "name": "nameIsNotEmpty",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "tokenNameToCheck",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1585:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:32:0"
            },
            "src": "1561:229:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1885:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5588,
                        "src": "1902:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 105,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9116,
                          "src": "1922:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1922:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5760,
                      "src": "1891:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "REGISTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1952:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 111,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9116,
                          "src": "1967:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1967:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 109,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5760,
                      "src": "1941:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:39:0"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1794:74:0",
              "text": " @notice Constructor to assign all roles to contract creator"
            },
            "id": 116,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:0:0"
            },
            "scope": 450,
            "src": "1871:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "2182:60:0",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "2188:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 125,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2204:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 127,
                      "indexExpression": {
                        "id": 126,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 119,
                        "src": "2225:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2204:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2188:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:49:0"
                }
              ]
            },
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1989:66:0",
              "text": " @notice get an address of a registered erc20 tokens"
            },
            "functionSelector": "10a43eba",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc20AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2093:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:29:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2157:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2156:23:0"
            },
            "scope": 450,
            "src": "2058:184:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2411:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "erc20RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "2424:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "2417:27:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "2246:66:0",
              "text": " @notice get an array of all registered erc20 tokens"
            },
            "functionSelector": "53206452",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "2383:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 134,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "2383:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "2383:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 136,
                    "nodeType": "ArrayTypeName",
                    "src": "2383:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2382:26:0"
            },
            "scope": 450,
            "src": "2315:134:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2579:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 148,
                      "name": "erc20RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2592:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2592:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 147,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "2585:34:0"
                }
              ]
            },
            "documentation": {
              "id": 143,
              "nodeType": "StructuredDocumentation",
              "src": "2453:63:0",
              "text": " @notice get count of all registered erc20 tokens"
            },
            "functionSelector": "455686c3",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc20Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:2:0"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2570:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:9:0"
            },
            "scope": 450,
            "src": "2519:105:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2823:61:0",
              "statements": [
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2829:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2845:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "id": 162,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "2867:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2845:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2829:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2829:50:0"
                }
              ]
            },
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "2628:67:0",
              "text": " @notice get an address of a registered erc721 tokens"
            },
            "functionSelector": "91567da8",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc721AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2734:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:29:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "2798:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2797:23:0"
            },
            "scope": 450,
            "src": "2698:186:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "3055:39:0",
              "statements": [
                {
                  "expression": {
                    "id": 175,
                    "name": "erc721RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "3068:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "3061:28:0"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "2888:67:0",
              "text": " @notice get an array of all registered erc721 tokens"
            },
            "functionSelector": "9f45c1d3",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2989:2:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3027:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 171,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 170,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "3027:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "3027:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 172,
                    "nodeType": "ArrayTypeName",
                    "src": "3027:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:26:0"
            },
            "scope": 450,
            "src": "2958:136:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3226:46:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 184,
                      "name": "erc721RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3239:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3239:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "3232:35:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "3098:64:0",
              "text": " @notice get count of all registered erc721 tokens"
            },
            "functionSelector": "01ab669c",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc721Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3191:2:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3217:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3216:9:0"
            },
            "scope": 450,
            "src": "3165:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "3470:59:0",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 196,
                      "name": "returnAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "3476:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 197,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "3492:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 199,
                      "indexExpression": {
                        "id": 198,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "3515:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3492:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3476:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:48:0"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "3276:68:0",
              "text": " @notice get an address of a registered erc1155 tokens"
            },
            "functionSelector": "4dd1b5f8",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getErc1155AddressRegistered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3384:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:26:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "returnAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3445:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3445:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3444:23:0"
            },
            "scope": 450,
            "src": "3347:182:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "3702:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 211,
                    "name": "erc1155RegisteredArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "3715:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                      "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 210,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "3708:29:0"
                }
              ]
            },
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "3533:68:0",
              "text": " @notice get an array of all registered erc1155 tokens"
            },
            "functionSelector": "c7092a82",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Registered",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3636:2:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3674:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BridgeManager.registeredToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 206,
                        "name": "registeredToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 23,
                        "src": "3674:15:0"
                      },
                      "referencedDeclaration": 23,
                      "src": "3674:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "3674:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage_ptr",
                      "typeString": "struct BridgeManager.registeredToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3673:26:0"
            },
            "scope": 450,
            "src": "3604:138:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3876:47:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 220,
                      "name": "erc1155RegisteredArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "3889:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                        "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3889:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "3882:36:0"
                }
              ]
            },
            "documentation": {
              "id": 215,
              "nodeType": "StructuredDocumentation",
              "src": "3746:65:0",
              "text": " @notice get count of all registered erc1155 tokens"
            },
            "functionSelector": "90344f62",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllErc1155Count",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3841:2:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3867:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3867:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3866:9:0"
            },
            "scope": 450,
            "src": "3814:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "4469:567:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "contractAddressERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "4490:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4511:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4490:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 244,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "4527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4490:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4547:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4475:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4475:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 252,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "4632:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4626:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 250,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4626:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4626:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4626:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4654:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "4626:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4664:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:97:0"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 260,
                        "name": "contractAddressERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "4714:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 261,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4735:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4714:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 263,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4750:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4714:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4714:56:0"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 299,
                      "src": "4776:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 267,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 266,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "4776:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "4776:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4776:31:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 270,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4813:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "4813:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 273,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4829:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4813:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:25:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 276,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4844:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4844:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 279,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4862:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4844:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:29:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 282,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4879:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "4879:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 285,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "4906:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4879:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "4958:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 288,
                        "name": "erc20RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4932:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4932:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 295,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4997:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 296,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "5010:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 294,
                      "name": "RegisterERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4978:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "4973:58:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3927:346:0",
              "text": " @notice  Register the contract address of an ERC20 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenName Name of the token to be registered (e.g.: DAI, UNI)\n @param   tokenContractAddress Contract address of the ERC20 Token"
            },
            "functionSelector": "dd2c859c",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 234,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 227,
                    "src": "4430:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "id": 233,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "4415:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4415:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 237,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 229,
                    "src": "4456:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 238,
                "modifierName": {
                  "id": 236,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "4441:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4441:27:0"
              }
            ],
            "name": "registerTokenERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4309:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4340:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "4373:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4303:102:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4469:0:0"
            },
            "scope": 450,
            "src": "4276:760:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "5568:698:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 317,
                            "name": "contractAddressERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "5716:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 319,
                          "indexExpression": {
                            "id": 318,
                            "name": "tokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "5738:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5716:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 320,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "5754:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5716:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5774:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5701:131:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "5701:131:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 328,
                                "name": "tokenSymbol",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "5859:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5853:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 326,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5853:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5853:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5853:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5881:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "5853:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5891:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5838:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5838:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "5838:97:0"
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 336,
                        "name": "contractAddressERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "5941:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "id": 337,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "5963:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5941:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 339,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "5978:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5941:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:57:0"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "6004:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 343,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 342,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "6004:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "6004:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6004:31:0"
                },
                {
                  "expression": {
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 346,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6041:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "6041:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 349,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "6057:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6041:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "6041:25:0"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 352,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6072:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "6072:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 355,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "6090:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "6072:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:29:0"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 358,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6107:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "6107:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "6134:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6107:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6187:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 364,
                        "name": "erc721RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "6160:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6160:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 371,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "6227:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 372,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "6240:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 370,
                      "name": "RegisterERC721Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6207:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6207:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "EmitStatement",
                  "src": "6202:59:0"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5040:331:0",
              "text": " @notice  Register the contract address of an ERC721 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenName Name of the token to be registered\n @param   tokenContractAddress Contract address of the ERC721 Token"
            },
            "functionSelector": "c082713b",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 310,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "5529:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 311,
                "modifierName": {
                  "id": 309,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "5514:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5514:25:0"
              },
              {
                "arguments": [
                  {
                    "id": 313,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 305,
                    "src": "5555:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 314,
                "modifierName": {
                  "id": 312,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "5540:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:27:0"
              }
            ],
            "name": "registerTokenERC721",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5408:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5408:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5439:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5439:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5472:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5402:102:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5568:0:0"
            },
            "scope": 450,
            "src": "5374:892:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 448,
              "nodeType": "Block",
              "src": "6767:560:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 390,
                            "name": "contractAddressERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "6788:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 392,
                          "indexExpression": {
                            "id": 391,
                            "name": "tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "6811:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6788:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 393,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "6824:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6788:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e206164647265737320697320616c72656164792072656769737465726564",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6844:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        },
                        "value": "BridgeManager: token address is already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25bc2c5c0d47f20daea835778e147b708750a02c194f3cb8c8b1474a2eccc87b",
                          "typeString": "literal_string \"BridgeManager: token address is already registered\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6773:129:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:129:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 401,
                                "name": "tokenURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "6929:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6923:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 399,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6923:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6923:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6923:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3235",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6948:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "6923:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4272696467654d616e616765723a20746f6b656e2053796d626f6c20746f6f206c6f6e67",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6958:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        },
                        "value": "BridgeManager: token Symbol too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2a93a31f606fbb8196ab693fd2d1a8a873c6f8ff7ad4229ae3261ba478d92b",
                          "typeString": "literal_string \"BridgeManager: token Symbol too long\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6908:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6908:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "6908:94:0"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 409,
                        "name": "contractAddressERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "7008:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 411,
                      "indexExpression": {
                        "id": 410,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7031:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7008:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 412,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "7043:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7008:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "7008:55:0"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "regToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 448,
                      "src": "7069:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                        "typeString": "struct BridgeManager.registeredToken"
                      },
                      "typeName": {
                        "id": 416,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 415,
                          "name": "registeredToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23,
                          "src": "7069:15:0"
                        },
                        "referencedDeclaration": 23,
                        "src": "7069:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_storage_ptr",
                          "typeString": "struct BridgeManager.registeredToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7069:31:0"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 419,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7106:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "7106:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 422,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "7122:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7106:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "7106:25:0"
                },
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 425,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7137:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "7137:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 428,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "7155:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7137:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:26:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7169:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deployedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "7169:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 434,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "7196:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7169:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7169:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "regToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "7250:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_registeredToken_$23_memory_ptr",
                          "typeString": "struct BridgeManager.registeredToken memory"
                        }
                      ],
                      "expression": {
                        "id": 437,
                        "name": "erc1155RegisteredArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "7222:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_registeredToken_$23_storage_$dyn_storage",
                          "typeString": "struct BridgeManager.registeredToken storage ref[] storage ref"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7222:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_registeredToken_$23_storage_$returns$__$",
                        "typeString": "function (struct BridgeManager.registeredToken storage ref)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 444,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7291:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 445,
                        "name": "tokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "7301:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 443,
                      "name": "RegisterERC1155Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7270:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7270:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "EmitStatement",
                  "src": "7265:57:0"
                }
              ]
            },
            "documentation": {
              "id": 377,
              "nodeType": "StructuredDocumentation",
              "src": "6270:331:0",
              "text": " @notice  Register the contract address of an ERC1155 Token\n @dev     - Token name and address can't be already registered\n          - Length of token name can't be higher than 25\n @param   tokenURI URI of the token to be registered\n @param   tokenContractAddress Contract address of the ERC1155 Token"
            },
            "functionSelector": "4d4825a0",
            "id": 449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 386,
                    "name": "tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "6757:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 387,
                "modifierName": {
                  "id": 385,
                  "name": "nameIsNotEmpty",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 99,
                  "src": "6742:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6742:24:0"
              }
            ],
            "name": "registerTokenERC1155",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6639:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6639:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6670:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6670:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6700:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6633:99:0"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6767:0:0"
            },
            "scope": 450,
            "src": "6604:723:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 451,
        "src": "423:6906:0"
      }
    ],
    "src": "32:7298:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x666E764072D446304ECEA2b50CEd6d4F7d7127d5",
      "transactionHash": "0x83872e3e727033aa33d0e97b964d9cfe94071b3b0ce438b819d579f40a56e6c9"
    },
    "4": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB63f0051e91D6705466430bDC5d5A84B767F6060",
      "transactionHash": "0xd4d9c560bea269940da704f2c55fbe7110157931c752c548b9aeb33745845523"
    },
    "97": {
      "events": {
        "0x823c87a16eb6a527733c83f98949577c23e881d4bd9e2af78535058fa5cd775c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC1155Token",
          "type": "event"
        },
        "0x8332d9919bf32207cb796a0a21674da0f96c4d6f2257c02073ff112e117bff0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC20Token",
          "type": "event"
        },
        "0x8b716abc5c12b2b1b216049f179e5b7ea408a5a96880c14d00b5c83282e43b95": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            }
          ],
          "name": "RegisterERC721Token",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x5db25a228bb559541edc20b1f2b84cee5e368249a2ea9255e5a38ae7a4a639b4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC1155Token",
          "type": "event"
        },
        "0x165900214ed2efc5014e11d6a345a7cf56338cec6a77f7836963249a5b12a19f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC20Token",
          "type": "event"
        },
        "0x0de03d3bef344b9df188770d8d72ff98e8c4b63ca2fedde287c7d4d12d8e5b0c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "UnRegisterERC721Token",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2f5dEE062a4bbdc1fdad1AA4817e16048381cEF0",
      "transactionHash": "0xdb35013a50385d1937811353622435b26ff0e048e225055484d8155589cc2d10"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-03-19T10:13:39.532Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "The PRIVI Blockchain team",
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "registerTokenERC1155(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name can't be higher than 25",
        "params": {
          "tokenContractAddress": "Contract address of the ERC1155 Token",
          "tokenURI": "URI of the token to be registered"
        }
      },
      "registerTokenERC20(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name can't be higher than 25",
        "params": {
          "tokenContractAddress": "Contract address of the ERC20 Token",
          "tokenName": "Name of the token to be registered (e.g.: DAI, UNI)"
        }
      },
      "registerTokenERC721(string,string,address)": {
        "details": "- Token name and address can't be already registered          - Length of token name can't be higher than 25",
        "params": {
          "tokenContractAddress": "Contract address of the ERC721 Token",
          "tokenName": "Name of the token to be registered"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "title": "Manages Bridge with ethereum, ERC20 tokens and ERC721 tokens between Users on Ethereum and PRIVI platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor to assign all roles to contract creator"
      },
      "getAllErc1155Count()": {
        "notice": "get count of all registered erc1155 tokens"
      },
      "getAllErc1155Registered()": {
        "notice": "get an array of all registered erc1155 tokens"
      },
      "getAllErc20Count()": {
        "notice": "get count of all registered erc20 tokens"
      },
      "getAllErc20Registered()": {
        "notice": "get an array of all registered erc20 tokens"
      },
      "getAllErc721Count()": {
        "notice": "get count of all registered erc721 tokens"
      },
      "getAllErc721Registered()": {
        "notice": "get an array of all registered erc721 tokens"
      },
      "getErc1155AddressRegistered(string)": {
        "notice": "get an address of a registered erc1155 tokens"
      },
      "getErc20AddressRegistered(string)": {
        "notice": "get an address of a registered erc20 tokens"
      },
      "getErc721AddressRegistered(string)": {
        "notice": "get an address of a registered erc721 tokens"
      },
      "registerTokenERC1155(string,string,address)": {
        "notice": "Register the contract address of an ERC1155 Token"
      },
      "registerTokenERC20(string,string,address)": {
        "notice": "Register the contract address of an ERC20 Token"
      },
      "registerTokenERC721(string,string,address)": {
        "notice": "Register the contract address of an ERC721 Token"
      }
    },
    "version": 1
  }
}